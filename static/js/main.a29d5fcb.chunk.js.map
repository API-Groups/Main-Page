{"version":3,"sources":["Pages/Subcomponents/Navigation.js","Pages/Subcomponents/Footer.js","Pages/Home.js","Authentication/Auth.js","Pages/Login.js","MiscComps/Wholeloading.js","Pages/Register.js","Functions/Miscfuncs.js","Functions/MinimizeText.js","Functions/Search.js","Functions/Loadingpage.js","Functions/LoadingComp.js","AuthPages/Dash.js","Admin/Setcomponent.js","AuthPages/ProjectPages/ProjectApi.js","AuthPages/ProjectPages/ProjectNotes.js","AuthPages/ProjectPages/ProjectUsers.js","AuthPages/ProjectPages/ProjectAnalytics.js","AuthPages/ProjectPages/Projectauth.js","MiscComps/Wholeloadingblue.js","AuthPages/ProjectPages/Projecthome.js","Security/PrivateRoute.js","AuthPages/ProjectAnalytics/Analyticcomps/Analyticnav.js","AuthPages/ProjectAnalytics/Tablepage/TableData.js","AuthPages/ProjectAnalytics/Tablepage/TableDetails.js","AuthPages/ProjectAnalytics/Tablepage/TableFunctionality.js","AuthPages/ProjectAnalytics/Tablepage/TableUsuage.js","MiscComps/Wholeloadinglightblue.js","AuthPages/ProjectAnalytics/Analyticcomps/LoadingData.js","AuthPages/ProjectAnalytics/Tablepage.js","App.js","index.js"],"names":["Navigation","className","to","NonAuthFooter","Home","JPIAuth","aInternal","currentUserInternal","aListener","val","this","registerListener","listener","signIn","username","password","Promise","resolve","reject","data","axios","post","headers","then","body","console","log","get","response","a","currentUser","catch","error","logout","put","userid","Login","useState","setUserName","setPassword","loggedin","loggedIn","setLogin","type","placeholder","onChange","e","target","value","onClick","LoadingWholePage","loadingprocess","title","version","id","xmlns","xmlnsXlink","x","y","width","height","viewBox","xmlSpace","fill","d","attributeType","attributeName","from","dur","repeatCount","fontSize","Register","props","loading","setLoading","firstname","setFirstName","lastname","setLastName","email","setEmail","setLoggedIn","setTimeout","generateId","length","result","characters","charactersLength","i","charAt","Math","floor","random","MinimizeText","text","substring","Search","inputstyle","renderstyle","output","callback","BTN","BTNStyle","BTNTitle","variable","longRender","map","setMap","longrender","setLongRender","columncard","setColumnCard","useEffect","suggestions","setSuggestions","CreatedSuggestions","currentrender","suggestionsmade","regex","RegExp","sort","filter","v","test","item","key","LoadingPage","loadingpage","LoadingComponent","loadingComponent","FrontCompliance","frontcompliance","BackEndPage","backendpage","backendres","setBackendres","currentComponent","setCurrentComponent","modalComponent","setModalComponent","componentDidMount","useRef","current","modalcomponent","componentname","componenttags","indexOf","description","model","install","FrontEndPage","frontendpage","searchOptions","setSearchOptions","Projects","projectcomponent","createmodal","setCreateModal","setLoadingComponent","projects","setProjects","pendingprojects","setPendingRes","currentprojects","setCurrentProjects","pendingProjects","setPendingProjects","users","setGetUsers","undefined","ShowPending","projectname","projectapi","push","ProjectCards","currentproject","LoadingComp","setProjectName","projectdescription","setProjectDescription","requestedusers","setRequestedUsers","Dash","frontend","setFrontEnd","backend","setBackEnd","setFrontCompliance","project","dashpage","setDashPage","setLoadingPage","SetComponent","setComponentName","componentDescription","setComponentDescription","componentTags","setComponentTags","currentclassModel","setCurrentClassModel","setComponentModel","installation","setInstallation","subcomponent","setSubComponent","componenttype","setComponentType","onKeyDown","keyCode","modelinstallation","ApiPage","apipage","api","setProjectApi","findapi","setFindApi","serviceapi","setServiceApi","frontendcreds","frontendcredentials","setFrontEndCreds","currentJSON","setCurrentJSON","apipageconstant","setApiPageConstant","componentMounted","apiPageConstant","registerMethod","setRegisterMethod","signInMethod","setSignInMethod","frontendprojectapi","frontendshow","backendcreds","blobUrl","window","URL","createObjectURL","Blob","dl","document","createElement","href","download","style","display","appendChild","click","removeChild","ProjectNotes","projectNotes","notemodal","setNoteModal","noteres","setNoteResponse","currentNote","setCurrentNote","currentModalNote","setCurrentModalNote","displaydate","creator","note","modalnote","noteinput","setNoteInput","notecode","setNoteCode","currentnote","currentcomments","setCurrentComments","originalCodeContainer","setOGCodeContainer","codeEditor","setCodeEditor","editCodes","setEditCodes","comments","codecontainer","codeEditorInput","code","setCode","author","noteid","editcodes","message","index","ProjectUsers","projectusers","setUsers","usersmodal","usermodal","setUsersModal","currentuser","setCurrentUser","ProjectAnalytics","projectanalytics","datamodel","setDataModel","setProjectUsers","models","setModels","modelShow","setModelShow","modelcards","currentModelCard","setModelCard","currentModelItem","setCurrentModelItem","CurrentModelCard","currentmodelcard","itemname","itemName","setItemName","itemDescription","setItemDescription","modelname","modeldescription","modelapi","currentIndex","redirectapi","modeltype","dataform","setModelName","setModelDescription","dataviewers","setDataViewers","datadevs","setDataDevs","datatype","setDataType","Projectauth","projectauth","addUserModal","setAddUsersModal","setData","trackingData","setTrackingData","usersModal","currentusers","trackinglabels","userall","useruid","NullifiedData","int","StringifyBoolean","toString","authMethodValue","setAuthMethodValue","authmethod","labels","setUsername","setAuthMethod","usertoken","setUserToken","mapJson","mapNames","object","Object","keys","visualtest","visuals","hasOwnProperty","editemail","setEditEmail","editfirstname","setEditFirstname","editlastname","setEditLastName","editusername","setEditUserName","editusertoken","setEditUserToken","regData","checker","LoadingBluePage","ProjectDetails","setApiPage","notes","setNotes","userspage","setUsersPage","projectAnalytics","setProjectAnalytics","projectName","setProjectAuth","match","params","PrivateRoute","path","comp","isAuthenticated","component","exact","AnalyticNav","navtitle","TableData","tabledata","array","tableapi","currentItem","setCurrentItem","itemModal","setItemModal","datatable","setDataTable","credentialModal","setCredentialModal","datamodal","setDataModal","setCreds","addedLabels","setLabels","items","currentModal","arrayItem","itemedits","indice","reponseid","TableDetails","tabledetails","details","tablelabels","TableFunctionality","tablefunctionality","TableUsuage","tableusuage","LoadingWholePageLight","LoadingData","TablePage","tableresponse","setTableResponse","setTableData","functionality","setFunctionality","usuage","setUsage","setTableDetails","componentLoading","setComponentLoading","renderPage","setRenderPage","mounted","tablename","render","App","authenticated","setAuthenticated","user","basename","Tablepage","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.a29d5fcb.chunk.js","sourcesContent":["import React from 'react';\nimport {NavLink} from 'react-router-dom';\n\nconst Navigation = () => {\n    return (\n        <div>\n         <div className=\"navigation-bar\">\n          <div className=\"container\">\n           <div className=\"row\">\n            <div className=\"col-md-4\">\n             <h5>JPI</h5>\n            </div>\n            <div className=\"col-md-4\">\n             <div className=\"row\">\n             <div className=\"col-md-4\">\n              <h6 className=\"text-center\">PRODUCTS</h6>\n             </div>\n             <div className=\"col-md-4\">\n              <h6 className=\"text-center\">PRICING</h6>\n             </div>\n             <div className=\"col-md-4\">\n              <NavLink className=\"navlink color-white\" to=\"/Admin\"><h6 className=\"text-center\">ADMIN</h6></NavLink>\n             </div>\n             </div>\n            </div>\n            <div className=\"col-md-4\">\n              <div className=\"float-right\">\n              <div className=\"row\">\n                <div className=\"col-md-6\">\n                <NavLink to=\"/Login\" className=\"navlink color-white\"><h6 className=\"text-center\">LOGIN</h6></NavLink>\n                </div>  \n                <div className=\"col-md-6\">\n                <NavLink to=\"/Register\" className=\"navlink color-white\"><h6 className=\"text-center\">REGISTER</h6></NavLink>\n                </div>  \n              </div>\n              </div>\n            </div>\n           </div>\n          </div>\n         </div>\n        </div>\n    )\n}\n\nexport default Navigation;\n","import React from 'react';\n\nconst NonAuthFooter = () => {\n    return (\n        <div>\n         <div className=\"footer-component\">\n          <h5>Programming made easy</h5>\n          <div className=\"footer-padding\">\n           <div className=\"row\">\n            <div className=\"col-md-4\">\n              <h3 className=\"text-center\">Authentication</h3>\n              <div className=\"text-padding\">\n               <h5>We give authentication services to JPI projects, the ability to register users and login users and to get unique user credentials.</h5>\n              </div>\n            </div>\n            <div className=\"col-md-4\">\n              <h3 className=\"text-center\">Data Management</h3>\n              <div className=\"text-padding\">\n               <h5>API Services that help you manage data easily where we give you analytics and statistics that help you and people involved in the app to  make decisive descisions with easily visible data</h5>\n              </div>\n            </div>\n            <div className=\"col-md-4\">\n              <h3 className=\"text-center\">API Services</h3>\n              <div className=\"text-padding\">\n               <h5>Free API services and components that can make your app more productive. A variety of frameworks are supported</h5>\n              </div>\n            </div>\n            </div>\n          </div>\n         </div>\n        </div>\n    )\n}\n\nexport default NonAuthFooter;","import React from 'react';\nimport Navigation from './Subcomponents/Navigation';\nimport NonAuthFooter from './Subcomponents/Footer';\nconst Home = () => {\n    return (\n        <div>\n         <Navigation/>\n         <div className=\"home-page\">\n         <div className=\"major-padding-page\">\n          <div className=\"container\">\n            <h1>JPI</h1>\n            <div className=\"text-padding\">\n             <h5>API Library to help with all type of services</h5>\n            </div>\n          </div>\n         </div>\n         </div>\n         <NonAuthFooter/>\n        </div>\n    )\n}\n\nexport default Home;","     import axios from 'axios';\n     export const JPIAuth = {\n        aInternal: false,\n        currentUserInternal: '',\n        aListener: function(val) {},\n        set currentUser(val) {\n          this.currentUserInternal = val;\n        },\n        get currentUser() {\n          return this.currentUserInternal;\n        },\n        set a(val) {\n          this.aInternal = val;\n          this.aListener(val);\n        },\n        get a() {\n          return this.aInternal;\n        },\n        registerListener: function(listener) {\n          this.aListener = listener;\n        },\n        signIn(username , password) {\n         return new Promise((resolve , reject) => {\n            const data = {\n              username: username,\n              password: password\n          }\n          axios.post(\"https://jpi-backend.herokuapp.com/api/authentication/authenticateprocess\" , data,{\n              headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n              },\n            }).then((body) => {\n              console.log(body)\n              if (body.data !== \"error\") {\n                 axios.get('https://jpi-backend.herokuapp.com/api/authentication/login/' + body.data)\n                 .then((response) => {\n                  this.a = true;\n                  this.currentUser = response.data;\n                 }).catch((error) => {\n                   console.log(error);\n                 })\n                 resolve(true);\n              } else {\n                  reject(\"error: there was an error in the authentication\")\n              }\n            })\n            .catch((error) => {\n              console.log(error);\n            })\n          })\n        },\n        logout() {\n          return new Promise((resolve , reject) => {\n            axios.put('https://jpi-backend.herokuapp.com/api/authentication/logout/' + this.currentUser.userid , {\n              headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n              }\n            }).then(() => {\n              this.a = false;\n              this.currentUser = \"\";\n              resolve(\"user logged out\");\n            }).catch((error) => {\n              console.log(error)\n              reject(error)\n            })\n          })\n        }\n    }","import React, {useState} from 'react';\nimport Navigation from './Subcomponents/Navigation';\nimport {JPIAuth} from '../Authentication/Auth';\nimport {Redirect} from 'react-router-dom';\nconst Login = () => {\n  const [username, setUserName] = useState({\n    username: ''\n  })\n  const [password, setPassword] = useState({\n    password: ''\n  })\n  const [loggedIn, setLogin] = useState({\n    loggedin: false\n  })\n\n  let {loggedin} = loggedIn\n  if(loggedin) {\n    return <Redirect to=\"/Dash\" />\n  }\n\n  console.log(username.username);\n  console.log(password.password)\n \n    return (\n        <div>\n         <Navigation/>\n         <div className=\"login-page\">\n         <div className=\"page\">\n          <div className=\"container\">\n            <h1>LOGIN</h1>\n            <div className=\"input-login-container\">\n            <div className=\"input-container\">\n             <input type=\"text\" className=\"input-bar\" placeholder=\"user name\" onChange={(e) => {\n               setUserName({\n                 username: e.target.value\n               })\n             }}/>\n            </div>\n            <div className=\"input-container\">\n             <input type=\"password\" className=\"input-bar\" placeholder=\"password\" onChange={(e) => {\n               setPassword({\n                 password: e.target.value\n               })\n             }}/>\n            </div>\n            </div>\n            <button className=\"button-purple\" onClick={() => {\n              JPIAuth.signIn(username.username , password.password)\n              .then(() => {\n                setLogin({\n                  loggedin: true\n                })\n              }).catch((error) => {\n                console.log(error);\n              })\n            }}>LOGIN</button>\n          </div>\n         </div>\n         </div>\n        </div>\n    )\n}\n\nexport default Login;","import React from 'react';\n\nconst LoadingWholePage = ({loadingprocess }) => {\n    if (loadingprocess === true) {\n        return (\n            <div>\n              <div className=\"modal-page-purple\">\n                <div className=\"container\">\n                  <div className=\"major-padding-page\">\n                    <div className=\"row\">\n                      <div className=\"col-md-12\">\n                      <div className=\"d-flex justify-content-center\">\n                      <div className=\"loader\" title=\"2\">\n                      <svg version=\"1.1\" id=\"loader-1\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"10px\" y=\"10px\"\n                          width=\"40px\" height=\"40px\" viewBox=\"0 0 50 50\" xmlSpace=\"preserve\">\n                      <path fill=\"#000\" d=\"M43.935,25.145c0-10.318-8.364-18.683-18.683-18.683c-10.318,0-18.683,8.365-18.683,18.683h4.068c0-8.071,6.543-14.615,14.615-14.615c8.072,0,14.615,6.543,14.615,14.615H43.935z\">\n                          <animateTransform attributeType=\"xml\"\n                          attributeName=\"transform\"\n                          type=\"rotate\"\n                          from=\"0 25 25\"\n                          to=\"360 25 25\"\n                          dur=\"0.6s\"\n                          repeatCount=\"indefinite\"\n                          fontSize=\"50px\"/>\n                          </path>\n                      </svg>\n                      </div>\n                      </div>\n                      </div>\n                    </div>\n                    <div className=\"row\">\n                     <div className=\"col-md-12\">\n                     <div className=\"text-padding-major\">\n                      <h3 className=\"text-white text-center\">CONSTRUCTING CONSOLE FOR YOU</h3>\n                     </div>\n                     </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n        )\n    } else {\n        return null;\n    }\n}\n\nexport default LoadingWholePage;","import React,{useState} from 'react';\nimport Navigation from './Subcomponents/Navigation';\nimport LoadingWholePage from '../MiscComps/Wholeloading';\nimport { JPIAuth } from '../Authentication/Auth';\nimport {Redirect} from 'react-router-dom';\nimport axios from 'axios'\n//import JPID from '../Test/testdata';\n\nconst Register = (props) => {\n  const [loading, setLoading] = useState({\n    loading: false\n  })\n  const [firstname, setFirstName] = useState({\n    firstname: ''\n  })\n  const [lastname, setLastName] = useState({\n    lastname: ''\n  })\n  const [email, setEmail] = useState({\n    email: ''\n  })\n  const [password, setPassword] = useState({\n    password: ''\n  })\n  const [username, setUserName] = useState({\n    username: ''\n  })\n  const [loggedin, setLoggedIn] = useState({\n    loggedin: false\n  })\n\n\n\n  if (loggedin.loggedin) {\n    return <Redirect to=\"/Dash\" />\n  }\n\n    return (\n        <div>\n         <Navigation/>\n         <div className=\"page\">\n          <div className=\"container\">\n            <h1>REGISTER</h1>\n              <div className=\"input-container\">\n               <input type=\"text\" className=\"input-bar\" placeholder=\"Username\" onChange={(e) => {\n                 setUserName({\n                   username: e.target.value\n                 })\n               }}/>\n              </div>\n            <div className=\"row\">\n             <div className=\"col-md-6\">\n              <div className=\"input-container\">\n               <input type=\"text\" className=\"input-bar\" placeholder=\"First Name\" onChange={(e) => {\n                 setFirstName({\n                   firstname: e.target.value\n                 })\n               }}/>\n              </div>\n             </div>\n             <div className=\"col-md-6\">\n              <div className=\"input-container\">\n               <input type=\"text\" className=\"input-bar\" placeholder=\"Last Name\" onChange={(e) => {\n                 setLastName({\n                   lastname: e.target.value\n                 })\n               }} />\n              </div>\n             </div>\n            </div>\n            <div className=\"input-container\">\n             <input type=\"text\" className=\"input-bar\" placeholder=\"Email\" onChange={(e) => {\n               setEmail({\n                 email: e.target.value\n               })\n             }} />\n            </div>\n            <div className=\"input-container\">\n             <input type=\"password\" className=\"input-bar\" placeholder=\"Password\" onChange={(e) => {\n               setPassword({\n                 password: e.target.value\n               })\n             }} />\n            </div>\n            <div className=\"button-padding\">\n             <button className=\"button-purple\" onClick={() => {\n               const data = {\n                 firstname: firstname.firstname,\n                 lastname: lastname.lastname,\n                 email: email.email,\n                 username: username.username,\n                 password: password.password\n               }\n\n               axios.post('https://jpi-backend.herokuapp.com/api/authentication/createuser', data , {\n                 headers: {\n                  'Accept': 'application/json',\n                  'Content-Type': 'application/json'\n                }\n               }).then((body) => {\n                console.log(body);\n                console.log(body.data.username);\n                console.log(body.data.password)\n\n                setLoading({\n                  loading: true\n                })\n                setTimeout(() => {\n                  setLoading({\n                    loading: false\n                  })\n                  JPIAuth.signIn(body.data.username, body.data.password)\n                  .then(() => {\n                    setLoggedIn({\n                      loggedin: true\n                    })\n                  }).catch((error) => {\n                    console.log(error)\n                  })\n                }, 5000);\n               }).catch((error) => {\n                 console.log(error);\n               })\n             }}>REGISTER</button>\n            </div>\n          </div>\n         </div>\n         <LoadingWholePage loadingprocess={loading.loading}/>\n        </div>\n    )\n}\n\nexport default Register;","export const generateId = (length) => {\n    let result = '';\n    const characters  = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.~_';\n    const charactersLength = characters.length;\n    for ( var i = 0; i < length; i++ ) {\n        result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n}\n\nexport default generateId;","import React from 'react';\n\nconst MinimizeText = (text , length) => {\n        if (text.length > length) {\n            return <p>{text.substring(0 , length + 1) + ' ....'}</p>\n        } else {\n            return <p>{text}</p>\n        }\n}\n\nexport default MinimizeText;","import React,{useState, useEffect} from 'react';\nimport {generateId} from './Miscfuncs'\nimport MinimizeText from './MinimizeText'\n\nconst Search = ({\n    inputstyle,\n    renderstyle,\n    output,\n    BTN,\n    callback,\n    BTNStyle,\n    BTNTitle,\n    placeholder,\n    variable,\n    longRender\n}) => {\n    const [map, setMap] = useState({\n        map: []\n    })\n    const [longrender, setLongRender] = useState({\n      longRender: \"\"\n    })\n    const [columncard, setColumnCard] = useState({\n      columncard: \"\"\n    })\n\n    useEffect(() => {\n        setMap({\n            map: variable\n        })\n        if (longRender === false ||longRender !== null) {\n          setLongRender({\n            longRender: \"row\"\n          })\n          setColumnCard({\n            columncard: \"columncard\"\n          })\n        } else if (longRender === true) {\n          setLongRender({\n            longRender: \"null\"\n          })\n          setColumnCard({\n            columncard: \"\"\n          })\n        }\n    }, [longRender, variable])\n\n\n    const Render = () => {\n      const [suggestions, setSuggestions] = useState({\n        suggestions: []\n    })\n    \n\n    const CreatedSuggestions = ({currentrender}) => {\n      if (output.length === 1) {\n        return (\n          <div className=\"card-spacing\">\n            <div className={renderstyle} onClick={() => {\n                callback(currentrender)\n            }}>\n             <h6 className=\"text-center\">{MinimizeText(currentrender[output[0]] , 14)}</h6>\n            </div>\n          </div>\n        )\n      } else if (output.length === 2) {\n        if(longRender === true) {\n          return (\n            <div className=\"card-spacing\">\n            <div className={renderstyle + \" \" + columncard.columncard} onClick={() => {\n                callback(currentrender)\n            }}>\n             <div className=\"row\">\n               <div className=\"col-md-6\">\n               <h5>{MinimizeText(currentrender[output[0]] , 25)}</h5>\n               </div>\n               <div className=\"col-md-6\">\n               <h6>{MinimizeText(currentrender[output[1]] , 30)}</h6>\n               </div>\n             </div>\n            </div>\n           </div>\n          )\n        } else {\n          return (\n            <div className=\"card-spacing\">\n            <div className={renderstyle} onClick={() => {\n                callback(currentrender)\n            }}>\n             <h5>{MinimizeText(currentrender[output[0]] , 14)}</h5>\n             <div className=\"text-padding\">\n               <h6>{MinimizeText(currentrender[output[1]] , 30)}</h6>\n             </div>\n            </div>\n           </div>\n          )\n        }\n      } else if (output.length === 3) {\n        if (longRender === true) {\n          return (\n            <div className=\"card-spacing\">\n            <div className={renderstyle + \" \" + columncard.columncard} onClick={() => {\n                callback(currentrender)\n            }}>\n            <div className=\"float-right\">\n              <h6>{currentrender[output[2]]}</h6>\n            </div>\n            <div className=\"text-padding\">\n               <h6>{MinimizeText(currentrender[output[1]] , 30)}</h6>\n            </div>\n             <h5>{currentrender[output[0]]}</h5>\n            </div>\n          </div>\n          )\n        } else {\n          return (\n            <div className=\"card-spacing\">\n            <div className={renderstyle} onClick={() => {\n                callback(currentrender)\n            }}>\n            <div className=\"float-right\">\n              <h6>{currentrender[output[2]]}</h6>\n            </div>\n            <h5>{currentrender[output[0]]}</h5>\n            <div className=\"text-padding\">\n               <h6>{MinimizeText(currentrender[output[1]] , 30)}</h6>\n            </div>\n            </div>\n          </div>\n          )\n        }\n      } else {\n        console.log(\"You have more than one search for comp\")\n      }\n    }\n\n        if (suggestions.suggestions.length < 0) {\n            return null;\n        } else {\n          return (\n            <div>\n               <div>\n               <input type=\"text\" className={inputstyle} placeholder={placeholder} onChange={(e) => {\n                let suggestionsmade = [];\n                const regex = new RegExp(`^${e.target.value}` , 'i');\n                suggestionsmade = map.map.sort().filter(v => {\n                for (let i = 0; i < output.length; i++) {\n                  if (regex.test(v[output[i]])) {\n                    return true\n                  }\n                }\n                  return false\n                } )\n                if (e.target.value.length !== 0) {\n                  setSuggestions({\n                    suggestions: suggestionsmade\n                })\n                } else {\n                  setSuggestions({\n                    suggestions: []\n                  })\n                }\n                }} />\n               </div>\n               <div className={longrender.longRender}>\n                  {\n                    suggestions.suggestions.map((item) => (\n                        <div key={generateId(100)}>\n                          <div className=\"card-spacing\">\n                          <CreatedSuggestions currentrender={item}/>\n                          </div>\n                        </div>\n                    ))\n                }\n               </div>\n            </div>\n          )\n        }\n    }\n\n    return (\n        <div>\n              <Render/>\n        </div>\n    )\n}\n\nexport default Search","import React from 'react';\n\nconst LoadingPage = ({loadingpage}) => {\n    if (loadingpage === true) {\n        return (\n            <div>\n             <div className=\"modal-page-white\">\n              <div className=\"container\">\n               <div className=\"major-padding-page\">\n                <div className=\"d-flex justify-content-center\">\n                <div className=\"loadingblue\"></div>\n                </div>\n               </div>\n              </div>\n             </div>\n            </div>\n        )\n    } else {\n        return null;\n    }\n}\n\nexport default LoadingPage;","import React from 'react';\n\nconst LoadingComponent = ({loadingComponent}) => {\n    if (loadingComponent === true) {\n        return (\n            <div>\n              <div className=\"loading-padding\">\n                <div className=\"d-flex justify-content-center\">\n                 <div className=\"loadingblue\"></div>\n                </div>\n              </div>\n            </div>\n        )\n    } else {\n        return null;\n    }\n}\n\nexport default LoadingComponent;","import React, {useState, useEffect,useRef} from 'react';\nimport Search from '../Functions/Search'\nimport {JPIAuth} from '../Authentication/Auth';\nimport LoadingPage from '../Functions/Loadingpage';\nimport {NavLink} from 'react-router-dom';\nimport LoadingComponent from '../Functions/LoadingComp';\nimport axios from 'axios';\n\nconst FrontCompliance = ({frontcompliance}) => {\n    if (frontcompliance === true) {\n        return (\n            <div>\n             <div className=\"non-nav-page\">\n                <div className=\"frontcompliance-page-title\">\n                    <h2>Front components Compliance</h2>\n                </div>\n                <div className=\"page-content\">\n                 <h3>Front Component Compliance</h3>\n                </div>\n             </div>\n            </div>\n        )\n    } else {\n        return null;\n    }\n}\n\nconst BackEndPage = ({backendpage}) => {\n    const [backendres, setBackendres] = useState({\n        backendres: []\n    })\n    const [currentComponent, setCurrentComponent] = useState({\n        currentComponent: []\n    })\n    const [modalComponent, setModalComponent] = useState({\n        modalComponent: false\n    })\n\n    const componentDidMount = useRef(false);\n\n    useEffect(() => {\n      componentDidMount.current = true;\n      if (componentDidMount.current) {\n        axios.get('https://jpi-backend.herokuapp.com/api/backend/getbackendcomps')\n        .then((body) => {\n            setBackendres({\n                backendres: body.data\n            })\n        }).catch((error) => {\n            console.log(error);\n        })\n      }\n\n      return () => {componentDidMount.current = false}\n    }, [])\n\n    const ModalCurrentComponent = ({modalcomponent}) => {\n        if (modalcomponent === true) {\n            return (\n                <div>\n                    <div className=\"modal-page\">\n                     <div className=\"container\">\n                      <div className=\"modal-padding\">\n                        <div className=\"modal-box\">\n                          <span className=\"closebtndark\" onClick={() => {\n                              setModalComponent({\n                                  modalComponent: false\n                              })\n                          }}>&times;</span>\n                          <h4>{currentComponent.currentComponent.componentname}</h4>\n                          <div className=\"row\">\n                          {\n                              currentComponent.currentComponent.componenttags.map((item) => (\n                                 <div key={currentComponent.currentComponent.componenttags.indexOf(item)}>\n                                    <div className=\"tag-padding\">\n                                        <h6 className=\"tag d-inline-flex p-2\">{item}</h6>\n                                    </div>\n                                 </div>\n                              ))\n                          }\n                          </div>\n                          <div className=\"text-padding\">\n                            <h5>{currentComponent.currentComponent.description}</h5>\n                          </div>\n                          <div className=\"code-padding-container\">\n                            <div className=\"code-container\">\n                              <pre>\n                                  {currentComponent.currentComponent.model}\n                              </pre>\n                            </div>\n                          </div>\n                          <div className=\"text-padding\">\n                            {\n                                currentComponent.currentComponent.install.map((item) => (\n                                    <div key={currentComponent.currentComponent.install.indexOf(item)}>\n                                       <div className={item.className}>\n                                         <h5>{item.text}</h5>\n                                       </div> \n                                    </div>\n                                ))\n                            }\n                          </div>\n                        </div>\n                      </div>\n                     </div>\n                    </div>\n                </div>\n            )\n        } else {\n            return null\n        }\n    }\n\n\n    if (backendpage === true) {\n        return (\n             <div>\n                 <div className=\"non-nav-page\">\n                 <div className=\"backend-page-title\">\n                  <h2>Back End</h2>\n                 </div>\n                 <div className=\"page-content\">\n                  <h3>Back End API's</h3>\n                  <div className=\"input-container\">\n                   <Search \n                   inputstyle=\"input-bar\"\n                   renderstyle=\"render-card\"\n                   output={[\"componentname\" , \"description\"]}\n                   variable={backendres.backendres}\n                   placeholder=\"Search for a Backend function\"\n                   longRender={true}\n                   callback={(item) => {\n                    setCurrentComponent({\n                        currentComponent: item\n                    })\n                    setModalComponent({\n                        modalComponent: true\n                    })\n                   }}\n                   />\n                  </div>\n                 </div>\n              </div>\n              <ModalCurrentComponent modalcomponent={modalComponent.modalComponent}  />\n             </div>\n        )\n    } else {\n        return null;\n    }\n}\n\nconst FrontEndPage = ({frontendpage}) => {\n    const [searchOptions, setSearchOptions] = useState({\n        searchOptions: []\n    })\n    const [currentComponent, setCurrentComponent] = useState({\n        currentComponent: []\n    })\n    const [modalComponent, setModalComponent] = useState({\n        modalComponent: false\n    })\n\n    const componentDidMount = useRef(false);\n    \n    useEffect(() => {\n    componentDidMount.current = true;\n    if (frontendpage === true) {\n        if (componentDidMount.current) {\n            axios.get('https://jpi-backend.herokuapp.com/api/frontend/getcomponents')\n            .then((body) => {\n                setSearchOptions({\n                    searchOptions: body.data\n                })\n            }).catch((error) => {\n                console.log(error);\n            })\n        }\n    }\n\n    return () => {componentDidMount.current = false}\n    }, [frontendpage])\n    \n\n    const ModalCurrentComponent = ({modalcomponent}) => {\n        if (modalcomponent === true) {\n            return (\n                <div>\n                    <div className=\"modal-page\">\n                     <div className=\"container\">\n                      <div className=\"modal-padding\">\n                        <div className=\"modal-box\">\n                          <span className=\"closebtndark\" onClick={() => {\n                              setModalComponent({\n                                  modalComponent: false\n                              })\n                          }}>&times;</span>\n                          <h4>{currentComponent.currentComponent.componentname}</h4>\n                          <div className=\"row\">\n                          {\n                              currentComponent.currentComponent.componenttags.map((item) => (\n                                 <div key={currentComponent.currentComponent.componenttags.indexOf(item)}>\n                                    <div className=\"tag-padding\">\n                                        <h6 className=\"tag d-inline-flex p-2\">{item}</h6>\n                                    </div>\n                                 </div>\n                              ))\n                          }\n                          </div>\n                          <div className=\"text-padding\">\n                            <h5>{currentComponent.currentComponent.description}</h5>\n                          </div>\n                          <div className=\"code-padding-container\">\n                            <div className=\"code-container\">\n                              <pre>\n                                  {currentComponent.currentComponent.model}\n                              </pre>\n                            </div>\n                          </div>\n                          <div className=\"text-padding\">\n                            {\n                                currentComponent.currentComponent.install.map((item) => (\n                                    <div key={currentComponent.currentComponent.install.indexOf(item)}>\n                                       <div className={item.className}>\n                                         <h5>{item.text}</h5>\n                                       </div> \n                                    </div>\n                                ))\n                            }\n                          </div>\n                        </div>\n                      </div>\n                     </div>\n                    </div>\n                </div>\n            )\n        } else {\n            return null\n        }\n    }\n\n    if (frontendpage === true) {\n        return (\n            <div>\n              <div className=\"non-nav-page\">\n                 <div className=\"frontend-page-title\">\n                  <h3>Front End</h3>\n                  <h6>Front End Functions and components that help you develop a better interface with much cleaner run time. All Front end functions are free.</h6>\n                 </div>\n                 <div className=\"page-content\">\n                  <h3>Front End API's</h3>\n                  <Search\n                  inputstyle=\"input-bar\"\n                  renderstyle=\"render-card\"\n                  output={[\"componentname\" , \"description\"]}\n                  variable={searchOptions.searchOptions}\n                  placeholder=\"Search for a React Component\"\n                  longRender={true}\n                  callback={(item) => {\n                   setCurrentComponent({\n                       currentComponent: item\n                   })\n                   setModalComponent({\n                       modalComponent: true\n                   })\n                  }}\n                  />\n                 </div>\n                </div>\n                <ModalCurrentComponent modalcomponent={modalComponent.modalComponent} />\n            </div>\n        )\n    } else {\n        return null;\n    }\n}\n\nconst Projects = ({projectcomponent}) => {\n    const [createmodal, setCreateModal] = useState({\n        createmodal: false\n    })\n    const [loadingComponent, setLoadingComponent] = useState({\n        loadingComponent: true\n    })\n    const [projects, setProjects] = useState({\n        projects: []\n    })\n    const [pendingprojects, setPendingRes] = useState({\n        pendingprojects: []\n    })\n    const [currentprojects, setCurrentProjects] = useState({\n        currentprojects: true\n    })\n    const [pendingProjects, setPendingProjects] = useState({\n        pendingProjects: false\n    })\n    const [users, setGetUsers] = useState({\n        users: []\n    })\n\n    const componentDidMount = useRef(false);\n    \n    useEffect(() => {\n     componentDidMount.current = true;\n     if (projectcomponent === true) {\n       setTimeout(() => {\n        if (componentDidMount.current) {\n            if (JPIAuth.currentUser.userid !== undefined) {\n            axios.get('https://jpi-backend.herokuapp.com/api/dash/getprojects/' + JPIAuth.currentUser.userid)\n            .then((body) => {\n                console.log(body)\n                setProjects({\n                    projects: body.data\n                })\n                setLoadingComponent({\n                    loadingComponent: false\n                })\n                setCurrentProjects({\n                    currentprojects: true\n                })\n            }).catch((error) => {\n                console.log(error);\n            })\n\n              axios.get('https://jpi-backend.herokuapp.com/api/dash/getpendingrequest/' + JPIAuth.currentUser.userid)\n              .then((body) => {\n                    setPendingRes({\n                        pendingprojects: body.data\n                    })\n                }).catch((error) => {\n                    console.log(error);\n                })\n\n                axios.get('https://jpi-backend.herokuapp.com/api/dash/getusers')\n                .then((body) => {\n                    setGetUsers({\n                      users: body.data\n                    })\n                }).catch((error) => {\n                    console.log(error)\n                })\n          }\n       }\n       }, 500);\n     }\n     return () => {\n         componentDidMount.current = false\n        }\n    }, [projectcomponent])\n\n    const ShowPending = () => {\n        return (\n            <div>\n             <div className=\"row\">\n              {\n                  pendingprojects.pendingprojects.map((item) => (\n                      <div key={pendingprojects.pendingprojects.indexOf(item)}>\n                        <div className=\"card-spacing\">\n                         <div className=\"pending-project\">\n                          <h4>{item.projectname}</h4>\n                          <div className=\"d-flex justify-content-center\">\n                          <div className=\"button-padding\">\n                            <button className=\"button-white\" onClick={() => {\n                                axios.get('https://jpi-backend.herokuapp.com/api/dash/connectproject/' + item.projectapi + '/' + JPIAuth.currentUser.userid)\n                                .then((body) => {\n                                    projects.projects.push(body.data);\n                                    setProjects({\n                                        projects: projects.projects\n                                    })\n                                    setPendingProjects({\n                                        pendingProjects: false\n                                    })\n                                    setCurrentProjects({\n                                        currentprojects: true\n                                    })\n                                }).catch((error) => {\n                                    console.log(error);\n                                })\n                            }}>JOIN</button>\n                          </div>\n                          </div>\n                         </div>\n                        </div>\n                      </div>\n                  ))\n              }\n             </div>\n            </div>\n        )\n    }\n\n\n    const ProjectCards = () => {\n            if (projects.projects !== 0) {\n                return (\n                    <div>\n                     <div className=\"row\">\n                     {\n                         projects.projects.map((item) => (\n                            <div key={projects.projects.indexOf(item)}>\n                             <div className=\"card-spacing\">\n                              <NavLink className=\"nav-card\" to={\"/project/\" + item.projectapi}>\n                              <div className=\"project-card\">\n                               <h4 className=\"text-center\">{item.projectname}</h4>\n                              </div>\n                              </NavLink>\n                             </div>\n                            </div>\n                         ))\n                     }\n                     </div>\n                    </div>\n                )\n            } else {\n                return (\n                    <div>\n                     <div className=\"title-padding\">\n                      <h2 className=\"text-center\">YOU ARE NOT APART OF ANY GROUPS</h2>\n                     </div>\n                    </div>\n                )\n            }\n    }\n\n\n    const CreatModal = ({createmodal}) => {\n        const [projectname, setProjectName] = useState({\n            projectname: ''\n        })\n        const [projectdescription, setProjectDescription] = useState({\n            projectdescription: ''\n        })\n        const [requestedusers, setRequestedUsers] = useState({\n            requestedusers: []\n        })\n       \n       \n        if (createmodal === true) {\n            return (\n                <div>\n                 <div className=\"modal-page\">\n                  <div className=\"container\">\n                    <div className=\"modal-padding\">\n                     <div className=\"modal-box\">\n                      <span className=\"closebtndark\" onClick={() => {\n                          setCreateModal({\n                              createmodal: false\n                          })\n                      }}>&times;</span>\n                      <h3>CREATE PROJECT</h3>\n                      <div className=\"input-container\">\n                        <input type=\"text\" className=\"input-bar\" placeholder=\"Project Name\" onChange={(e) => {\n                            setProjectName({\n                                projectname: e.target.value\n                            })\n                        }} />\n                      </div>\n                      <div className=\"input-container\">\n                        <textarea type=\"text\" className=\"text-area-input\" placeholder=\"Project Description\" onChange={(e) => {\n                            setProjectDescription({\n                                projectdescription: e.target.value\n                            })\n                        }} />\n                      </div>\n                      <Search\n                      inputstyle=\"input-bar\"\n                      renderstyle=\"user-search-container\"\n                      output={[\"username\" , \"fullname\", \"firstname\"]}\n                      variable={users.users}\n                      placeholder=\"People you want to add\"\n                      longRender={false}\n                      callback={(item) => {\n                        requestedusers.requestedusers.push(item.userid)\n                        setRequestedUsers({\n                            requestedusers: requestedusers.requestedusers\n                        })\n                      }}\n                      />\n                      <div className=\"button-padding\">\n                        <button className=\"button-purple\" onClick={() => {\n                            const data = {\n                                projectname: projectname.projectname,\n                                projectdescription: projectdescription.projectdescription,\n                                requestedusers: requestedusers.requestedusers,\n                            }\n\n                            axios.post('https://jpi-backend.herokuapp.com/api/dash/createproject/' + JPIAuth.currentUser.userid, data,{\n                                headers: {\n                                    'Accept': 'application/json',\n                                    'Content-Type': 'application/json'\n                                },\n                            }).then((body) => {\n                                console.log(body);\n                                projects.projects.push(body.data);\n                                setProjects({\n                                    projects: projects.projects\n                                })\n                                setCreateModal({\n                                    createmodal: false\n                                })\n                            }).catch((error) => {\n                                console.log(error);\n                            })\n                        }} >CREATE PROJECT</button>\n                      </div>\n                     </div>\n                    </div>\n                  </div>\n                 </div>\n                </div>\n            )\n        } else {\n            return null;\n        }\n    }\n\n    const CurrentProjects = ({currentproject}) => {\n        if (currentproject === true) {\n            return (\n                <div>\n                     <div className=\"project-homepage-title\">\n                        <div className=\"float-right\">\n                        <button className=\"button-purple\" onClick={() => {\n                            setCreateModal({\n                                createmodal: true\n                            })\n                        }}>CREATE PROJECT</button>\n                        <div className=\"button-padding\">\n                        <button className=\"button-all-white\" onClick={() => {\n                            setCurrentProjects({\n                                currentprojects: false\n                            })\n                            setPendingProjects({\n                                pendingProjects: true\n                            })\n                        }}>PENDING PROJECTS</button>\n                        </div>\n                        </div>\n                        <h4>PROJECTS</h4>\n                    </div>\n                     <div className=\"projects-homepage\">\n                        <h6>Allow your projects to get the best services so that your users are given the best experience that your project has to offer.</h6>\n                        <div className=\"title-padding\">\n                        <h3>YOUR PROJECTS</h3>\n                        </div>\n                        <LoadingComponent loadingComponent={loadingComponent.loadingComponent} />\n                        <ProjectCards/>\n                     </div>\n                </div>\n            )\n        } else {\n            return null;\n        }\n    }\n\n    const PendingProjects = ({pendingprojects}) => {\n        if(pendingprojects === true) {\n            return (\n                <div>\n                 <div>\n                   <div className=\"project-homepage-title\">\n                     <div className=\"float-right\">\n                      <button className=\"button-white\" onClick={() => {\n                          setCurrentProjects({\n                              currentprojects: true\n                          })\n                          setPendingProjects({\n                              pendingProjects: false\n                          })\n                      }}>CURRENT PROJECTS</button>\n                     </div>\n                     <h4>PENDING PROJECTS</h4>\n                     </div>\n                 </div>\n                 <div className=\"projects-homepage\">\n                    <h6>Connect to your pending projects</h6>\n                    <div className=\"title-padding\">\n                    <h3>PENDING PROJECTS</h3>\n                    </div>\n                    <div className=\"text-padding\">\n                      <ShowPending/>\n                    </div>\n                </div>\n                </div>\n            )\n        } else {\n            return null;\n        }\n    }\n\n    if (projectcomponent === true) {\n        return (\n            <div>\n             <div className=\"non-nav-page\">\n              <CurrentProjects currentproject={currentprojects.currentprojects}/>\n              <PendingProjects pendingprojects={pendingProjects.pendingProjects}/>\n             </div>\n             <CreatModal createmodal={createmodal.createmodal} />\n            </div>\n        )\n    } else {\n        return null;\n    }\n}\n\nconst Dash = () => {\n    const [frontend, setFrontEnd] = useState({\n        frontend: false\n    })\n    const [backend, setBackEnd] = useState({\n        backend: false\n    })\n    const [frontcompliance, setFrontCompliance] = useState({\n        frontcompliance: false\n    })\n    const [project, setProjects] = useState({\n        project: true \n    })\n    const [dashpage, setDashPage] = useState({\n        dashpage: false\n    })\n    const [loading, setLoadingPage] = useState({\n        loading: false\n    })\n\n\n    useEffect(() => {\n        setLoadingPage({\n            loading: true\n        })\n        setTimeout(() => {\n            setLoadingPage({\n                loading: false\n            })\n            setDashPage({\n                dashpage: true\n            })\n        }, 1000);\n    } , [])\n\n\n    const DashPage = ({dashpage}) => {\n     if (dashpage === true) {\n        return (\n            <div>\n              <div className=\"dash-navbar\">\n               <div className=\"float-right\">\n                <button className=\"button-all-white\" onClick={() => {\n                    JPIAuth.logout();\n                }}>LOGOUT</button>\n               </div>\n               <h5>{JPIAuth.currentUser.username}</h5>\n              </div>\n             <div className=\"dash\">\n             <div className=\"dash-navigation\">\n                <div className=\"container\">\n                 <div className=\"dash-comp-container\">\n                  <h6 onClick={() => {\n                      setProjects({\n                          project: true\n                      })\n                      setFrontEnd({\n                          frontend: false\n                      })\n                      setBackEnd({\n                          backend: false\n                      })\n                      setFrontCompliance({\n                          frontcompliance: false\n                      })\n                  }}>PROJECTS</h6>\n                 </div>\n                 <div className=\"dash-comp-container\">\n                  <h6 onClick={() => {\n                      setProjects({\n                        project: false\n                    })\n                      setFrontEnd({\n                          frontend: true\n                      })\n                      setBackEnd({\n                          backend: false\n                      })\n                      setFrontCompliance({\n                          frontcompliance: false\n                      })\n                  }}>FRONT END</h6>\n                 </div>\n                 <div className=\"dash-comp-container\">\n                  <h6 onClick={() => {\n                      setProjects({\n                        project: false\n                    })\n                    setFrontEnd({\n                        frontend: false\n                    })\n                    setBackEnd({\n                        backend: true\n                    })\n                    setFrontCompliance({\n                        frontcompliance: false\n                    })\n                  }}>BACK END</h6>\n                 </div>\n                 <div className=\"dash-comp-container\">\n                  <h6 onClick={() => {\n                      setProjects({\n                        project: false\n                    })\n                      setFrontEnd({\n                        frontend: false\n                    })\n                    setBackEnd({\n                        backend: false\n                    })\n                    setFrontCompliance({\n                        frontcompliance: true\n                    })\n                  }}>FRONT COMPLIANCE</h6>\n                 </div>\n                </div>\n              </div>\n             </div>\n              <FrontEndPage frontendpage={frontend.frontend} />\n              <BackEndPage backendpage={backend.backend} />\n              <FrontCompliance frontcompliance={frontcompliance.frontcompliance} />\n              <Projects projectcomponent={project.project} />\n            </div>\n        )\n     } else {\n         return null;\n     }\n    }\n\n\n    return (\n        <div>\n         <DashPage dashpage={dashpage.dashpage} />\n         <LoadingPage loadingpage={loading.loading} />\n        </div>\n    )\n}\n\nexport default Dash;","import React, {useState} from 'react';\nimport axios from 'axios';\nconst SetComponent = () => {\n    const [componentname, setComponentName] = useState({\n        componentname: ''\n    })\n    const [componentDescription, setComponentDescription] = useState({\n        componentDescription: ''\n    })\n    const [componentTags, setComponentTags] = useState({\n        componentTags: []\n    })\n    const [currentclassModel, setCurrentClassModel] = useState({\n        currentclassModel: 'text-model'\n    })\n    const [model, setComponentModel] = useState({\n        model: ''\n    })\n    const [installation, setInstallation] = useState({\n        installation: []\n    })\n    const [subcomponent, setSubComponent] = useState({\n        subcomponent: \"EMPTY\"\n    })\n    const [componenttype, setComponentType] = useState({\n        componenttype: \"FRONTEND\"\n    })\n\n    const ShowInstallTitle = () => {\n        if (installation.installation.length > 0) {\n            return (\n                <div>\n                    <h4>INSTALL</h4>\n                </div>\n            )\n        } else {\n            return null;\n        }\n    }\n\n    const TypeFrontEnd = () => {\n        if (componenttype.componenttype === \"FRONTEND\") {\n          return (\n              <div>\n                  <select className=\"input-bar\" onChange={(e) => {\n                      setSubComponent({\n                          subcomponent: e.target.value\n                      })\n                  }}> \n                      <option value=\"EMPTY\">Pick a languange</option>\n                      <option value=\"REACT\">React Component</option>\n                      <option value=\"VANILLAJS\">Vanilla Javascript</option>\n                  </select>\n              </div>\n          )\n        } else if (componenttype.componenttype === \"BACKEND\") {\n            return (\n                <div>\n                <select className=\"input-bar\" onChange={(e) => {\n                      setSubComponent({\n                          subcomponent: e.target.value\n                      })\n                  }}>\n                    <option value=\"EMPTY\">Pick a languange</option>\n                    <option value=\"NODEJS\">Node.js</option>\n                    <option value=\"PYTHON\">Python</option>\n                    <option value=\"JAVA\">Java</option>\n                    <option value=\"GO\">Go</option>\n                    <option value=\"SWIFT\">Swift</option>\n                </select>\n                </div>\n            )\n        } else if (componenttype.componenttype === \"FRONTCOMPLIANCE\") {\n            return (\n                <div>\n                 <select className=\"input-bar\" onChange={(e) => {\n                      setSubComponent({\n                          subcomponent: e.target.value\n                      })\n                  }}>\n                     <option value=\"EMPTY\">Pick a languange</option>\n                     <option value=\"REACTJS\">React JS</option>\n                 </select>\n                </div>\n            )\n        } else {\n            return null;\n        }\n    }\n\n\n    return (\n        <div>\n            <div className=\"admin-page\">\n             <div className=\"container\">\n             <h3>SET COMPONENT</h3>\n              <div className=\"row\">\n                <div className=\"col-md-6\">\n                <div className=\"input-container\">\n                <input type=\"text\" className=\"input-bar\" placeholder=\"Component Name\" onChange={(e) => {\n                        setComponentName({\n                            componentname: e.target.value\n                        })\n                    }} />\n                </div>\n                <div className=\"input-container\">\n                <select  className=\"input-bar\" onChange={(e) => {\n                        setComponentType({\n                            componenttype: e.target.value\n                        })\n                        setSubComponent({\n                            subcomponent: \"\"\n                        })\n                    }}>\n                 <option value=\"FRONTEND\">FRONT END</option>\n                 <option value=\"BACKEND\">BACK END</option>\n                 <option value=\"FRONTCOMPLIANCE\">FRONT COMPLIANCE</option>\n                </select>\n                </div>\n                <div className=\"input-container\">\n                 <TypeFrontEnd/>\n                </div>\n                <div className=\"input-container\">\n                    <textarea type=\"text\" className=\"input-bar\" placeholder=\"Component Description\" onChange={(e) => {\n                        setComponentDescription({\n                            componentDescription: e.target.value\n                        })\n                    }} />\n                </div>\n                <div className=\"input-container\">\n                <input type=\"text\" className=\"input-bar\" placeholder=\"Component Tags\" onKeyDown={(e) => {\n                    if (e.keyCode === 13) {\n                    componentTags.componentTags.push(e.target.value);\n                    setComponentTags({\n                        componentTags: componentTags.componentTags\n                    })\n                    e.target.value = \"\"\n                    }\n                }} />\n                </div>\n                <div className=\"input-container\">\n                <textarea type=\"text\" className=\"text-area-input\" placeholder=\"Component Model\" onChange={(e) => {\n                    setComponentModel({\n                        model: e.target.value\n                    })\n                }} />\n                </div>\n                <div className=\"input-container\">\n                <div className=\"row\">\n                    <div className=\"col-md-6\">\n                    <div className=\"input-container\">\n                    <select className=\"input-bar\" placeholder=\"Component class\" onChange={(e) => {\n                        setCurrentClassModel({\n                            currentclassModel: e.target.value\n                        })\n                    }}>\n                    <option value=\"code-model\">Code</option>\n                    <option value=\"text-model\">Text</option>\n                    </select>\n                    </div>\n                    </div>\n                    <div className=\"col-md-6\">\n                    <input type=\"text\" className=\"input-bar\" placeholder=\"Component Installation\" onKeyDown={(e) => {\n                        if (e.keyCode === 13) {\n                            const modelinstallation = {\n                                className: currentclassModel.currentclassModel,\n                                text: e.target.value\n                            }\n                            installation.installation.push(modelinstallation);\n                            setInstallation({\n                                installation: installation.installation\n                            })\n\n                            e.target.value = \"\"\n                        }\n                    }} />\n                    </div>\n                 </div>\n                </div>\n                <div className=\"button-padding\">\n                    <button className=\"button-purple\" onClick={() => {\n                        const data = {\n                            componentname: componentname.componentname,\n                            componenttype: componenttype.componenttype,\n                            componenttags: componentTags.componentTags,\n                            description: componentDescription.componentDescription,\n                            model: model.model,\n                            install: installation.installation,\n                            subcomponent: subcomponent.subcomponent\n                        }\n                        \n                        console.log(data);\n\n                        \n                        axios.put('https://jpi-backend.herokuapp.com/adminapi/setcomponent', data,{\n                            headers: {\n                                'Accept': 'application/json',\n                                'Content-Type': 'application/json'\n                            }, \n                        }).then(() => {\n                            console.log('this worked')\n                        }).catch((error) => {\n                            console.log(error);\n                        })\n                        \n                    }}>SUBMIT COMPONENT</button>\n                 </div>\n                </div>\n                <div className=\"col-md-6\">\n                 <h3>{componentname.componentname}</h3>\n                 <div className=\"row\">\n                 {\n                     componentTags.componentTags.map((item) => (\n                         <div key={componentTags.componentTags.indexOf(item)}>\n                             <div className=\"tag-padding\">\n                             <h6 className=\"tag d-inline-flex p-2\">{item}</h6>\n                             </div>\n                         </div>\n                     ))\n                 }\n                 </div>\n                 <div className=\"text-padding\">\n                    <h6>{componentDescription.componentDescription}</h6>\n                 </div>\n                 <div className=\"code-container\">\n                  <pre>\n                      {model.model}\n                  </pre>\n                 </div>\n                 <ShowInstallTitle/>\n                 <div className=\"title-padding\">\n                    {\n                        installation.installation.map((item) => (\n                            <div key={installation.installation.indexOf(item)}>\n                             <div className={item.className}>\n                              <h5>{item.text}</h5>\n                             </div>\n                            </div>\n                        ))\n                    }\n                 </div>\n                </div>\n              </div>\n             </div>\n            </div>\n        </div>\n    )\n}\n\nexport default SetComponent;","import React, {useState , useEffect, useRef} from 'react';\nimport Search from '../../Functions/Search';\nimport LoadingComponent from '../../Functions/LoadingComp'\nimport axios from 'axios';\n\nconst ApiPage = ({apipage , api}) => {\n    const [projectapi , setProjectApi] = useState({\n        projectapi: true\n    })\n    const [findapi, setFindApi] = useState({\n        findapi: false\n    })\n    const [serviceapi, setServiceApi] = useState({\n        serviceapi: false\n    })\n    const [frontendcredentials , setFrontEndCreds] = useState({\n        frontendcreds: {}\n    })\n    const [currentComponent, setCurrentComponent] = useState({\n        currentComponent: 'FRONTEND'\n    })\n    const [frontend, setFrontEnd] = useState({\n        frontend: []\n    })\n    const [backend, setBackEnd] = useState({\n        backend: []\n    })\n    const [frontcompliance, setFrontCompliance] = useState({\n        frontcompliance: []\n    })\n    const[currentJSON, setCurrentJSON] = useState({\n        currentJSON: []\n    })\n    const [apipageconstant, setApiPageConstant] = useState({\n        apipageconstant: false\n    })\n    const [loading, setLoading] = useState({\n        loading: true\n    })\n\n    const componentMounted = useRef(false)\n\n     useEffect(() => {\n        componentMounted.current = true;\n        if (apipage === true) {\n            if (componentMounted.current) {\n                setTimeout(() => {\n                axios.get('https://jpi-backend.herokuapp.com/api/backend/getbackendcomps')\n                .then((body) => {\n                setBackEnd({\n                    backend: body.data\n                })\n                }).catch((error) => {\n                    console.log(error)\n                })\n                axios.get('https://jpi-backend.herokuapp.com/api/project/getfrontendapi/' + api)\n                .then((body) => {\n                    setFrontEndCreds({\n                        frontendcreds: body.data\n                    })\n                })\n                axios.get('https://jpi-backend.herokuapp.com/api/frontend/getcomponents')\n                .then((body) => [\n                    setFrontEnd({\n                        frontend: body.data\n                    })\n                ]).catch((error) => {\n                    console.log(error)\n                })\n                axios.get('https://jpi-backend.herokuapp.com/api/frontcompliance/getfrontcompliance')\n                .then((body) => {\n                setFrontCompliance({\n                    frontcompliance: body.data\n                })\n                }).then(() => {\n                    setLoading({\n                        loading: false\n                    })\n                    setApiPageConstant({\n                        apipageconstant: true\n                    })\n                }).catch((error) => {\n                    console.log(error)\n                })\n                }, 1000);\n            }\n        }\n     }, [apipage, api])\n\n\n    const ServiceApi = ({serviceapi}) => {\n     const [frontend, setFrontEnd] = useState({\n         frontend: true\n     })\n     const [backend, setBackEnd] = useState({\n         backend: false\n     })\n\n     const FrontEndCreds = ({frontendshow}) => {\n         if (frontendshow === true) {\n            return (\n                <div>\n                 <div className=\"row\">\n                  <div className=\"col-md-4\">\n                   <div className=\"background-front-end-nav\">\n                    <h5>Front End Services</h5>\n                    <div className=\"comp-spacing\">\n                     <label>Authentication</label>\n                     <h6>Authentication Services that allow to login and register users.</h6>\n                    </div>\n                   </div>\n                  </div>\n                  <div className=\"col-md-8\">\n                  <h4>Front-End Service Credentials</h4>\n                 <div className=\"text-padding\">\n                  <h6>Copy and paste this code to a file and either use it directly to your use our services or export it.</h6>\n                  <div className=\"code-container\">\n                   <pre>\n                     {\n                         `const app = {\n        frontendprojectapi: ${frontendcredentials.frontendcreds.frontendprojectapi}, \n        projectname: ${frontendcredentials.frontendcreds.projectname}\n    }\n                         \n    //make sure you imported the JPI package you want to use that has front end services\n                         \n    JPIData.service(app);\n                         `\n                     }\n                   </pre>\n                  </div>\n                 </div>\n                  </div>\n                 </div>\n                </div>\n            )\n         } else {\n             return null\n         }\n     } \n\n     const BackendCreds = ({backendcreds}) => {\n         if (backendcreds === true) {\n            return (\n                      <div>\n                         <h4>Back-End Service Credentials</h4>\n                         <h6>Add Key Credentials to your code to use our backend API's and Frontcompliance components for effective and productive code.</h6>\n                         <div className=\"text-padding\">\n                         <div className=\"row\">\n                             <div className=\"col-md-4\">\n                               <h6>JPI Service Credentials is the key to using the backend and the Front compliance components where you can monitor specific data that we display for you so that you can modify and update your application to its most promising potential. Please be advised that this key is very IMPORTANT and make sure that this is not public information because of the fact that this can affect your data immensley. In the case that we find any abnormalities or insecurities we will notify you immediately.</h6>\n                             </div>\n                           <div className=\"service-box\">\n                             <div className=\"col-md-8\">\n                             <h4>SERVICE CREDENTIALS</h4>\n                               <div className=\"button-major-padding\">\n                                <div className=\"d-flex justify-content-center\">\n                                <button className=\"button-all-white\" onClick={() => {\n                                    axios.get('https://jpi-backend.herokuapp.com/api/project/getservicecredentials/' + api)\n                                    .then((body) => {\n                                        axios.get('https://jpi-backend.herokuapp.com/api/project/getservicetitle/' + api)\n                                        .then((title) => {\n                                           const blobUrl = window.URL.createObjectURL(new Blob([body.data] , {type: \"application/json\"}));\n                                           const dl = document.createElement('a');\n                                           dl.href = blobUrl;\n                                           dl.download = title;\n                                           dl.style.display = `none`;\n                                           document.body.appendChild(dl);\n                                           dl.click();\n                                           document.body.removeChild(dl);  \n                                        }).catch((error) => {\n                                            console.log(error);\n                                        })       \n                                    }).catch((error) => {\n                                        console.log(error);\n                                    })\n                                }}>GET CREDENTIALS</button>\n                                </div>\n                               </div>\n                             </div>\n                            </div>\n                           </div>\n                         </div>\n                      </div>\n            )\n         } else {\n             return null;\n         }\n     }\n     if (serviceapi === true) {\n         return (\n             <div>\n                 <div className=\"project-component\">\n                    <div className=\"container\">\n                        <div className=\"button-padding\">\n                          <div className=\"float-left\">\n                           <div className=\"button-spacing\">\n                           <button className=\"button-purple\" onClick={() => {\n                            setBackEnd({\n                                backend: false\n                            })\n                            setFrontEnd({\n                                frontend: true\n                            })\n                           }}>FRONT-END</button>\n                           </div>\n                         </div>\n                         <button className=\"button-white\" onClick={() => {\n                               setBackEnd({\n                                   backend: true\n                               })\n                               setFrontEnd({\n                                   frontend: false\n                               })\n                           }}>BACK-END</button>\n                         </div>\n                     <FrontEndCreds frontendshow={frontend.frontend}/>\n                     <BackendCreds backendcreds={backend.backend} />\n                    </div>\n                  </div>\n             </div>\n         )\n     } else {\n         return null;\n     }\n    }\n \n    const FindAPI = ({findapi}) => {\n        if (findapi === true) {\n            return (\n                <div>\n                  <div className=\"project-component\">\n                   <div className=\"container\">\n                     <h4>Add API to Project</h4>\n                     <div className=\"row\">\n                      <div className=\"col-md-8\">\n                        <Search \n                        inputstyle=\"input-bar\"\n                        output={[\"name\", \"description\"]}\n                        renderstyle=\"render-card\"\n                        variable={currentJSON.currentJSON}\n                        placeholder=\"Search for Components\"\n                        callback={(item) => {\n                            console.log(item)\n                        }}\n                        />\n                      </div>\n                      <div className=\"col-md-4\">\n                        <div className=\"input-container\">\n                        <select className=\"input-bar\" onChange={(e) => {\n\n                            console.log(e.target.value)\n\n                        \n                            setCurrentComponent({\n                                currentComponent: e.target.value\n                            })\n\n                            if (currentComponent.currentComponent === \"FRONTEND\") {\n                              setCurrentJSON({\n                                  currentJSON: frontend.frontend\n                              })\n                            } else if (currentComponent.currentComponent === \"BACKEND\") {\n                                setCurrentJSON({\n                                    currentJSON: backend.backend\n                                })\n                            } else if (currentComponent.currentComponent === \"FRONTCOMPLIANCE\") {\n                                setCurrentJSON({\n                                    currentJSON: frontcompliance.frontcompliance\n                                })\n                            }\n                            \n\n                        }}>\n                         <option value=\"FRONTEND\">Front End</option>\n                         <option value=\"BACKEND\">Back End</option>\n                         <option value=\"FRONTCOMPLIANCE\">Front Compliance</option>\n                        </select>\n                        </div>\n                      </div>\n                     </div>\n                   </div>\n                  </div>\n                </div>\n            )\n        } else {\n            return null;\n        }\n    }\n \n    const ProjectApis = ({projectapi}) => {\n        const ApiPageConstant = ({apiPageConstant}) => {\n            const [registerMethod, setRegisterMethod] = useState({\n                registerMethod: true\n            })\n            const [signInMethod, setSignInMethod] = useState({\n                signInMethod: false\n            })\n            \n\n                const SignInMethod = ({signInMethod}) => {\n                    if (signInMethod === true) {\n                        return (\n                            <div>\n                             <div className=\"modal-comp\">\n                              <h4>Sign In Method</h4>\n                              <div className=\"text-padding\">\n                                <h5>Users can login to your Application easily and we will be able to manage the user sessions even if you refresh the page</h5>\n                              </div>\n                              <div className=\"code-container\">\n                                <pre>\n{\n`const app = {\n    frontendprojectapi: ${frontendcredentials.frontendcreds.frontendprojectapi}, \n    projectname: ${frontendcredentials.frontendcreds.projectname}\n  }\n                                                               \n  //make sure you imported the JPI package you want to use that has front end services\n                                                               \n  const register = JPIData.service(app);\n  JPIAuth.AuthMethods.signInEmailAndPassword()\n  JPIAuth.AuthMethods.signInUsernameAndPassword()\n                                          \n  /*\n  email = email of the user (optional if not using a email and password authentication),\n  username = username of the user (optional if not using a username and password authentication),\n  password = password(required)\n  */      \n `\n}\n                                </pre>\n                              </div>\n                             </div>\n                            </div>\n                        )\n                    } else {\n                        return null;\n                    }\n                }\n\n                const RegisterMethod = ({registerMethod}) => {\n                    if (registerMethod === true) {\n                        return (\n                            <div>\n                                <div className=\"modal-comp\">\n                                  <h4>Registering Users</h4>\n                                  <div className=\"text-padding\">\n                                   <h5>Users can be registered through simple frontend functions and please note that there is backend functions in which we can register users.</h5>\n                                  </div>\n                                  <div className=\"code-container\">\n                                   <pre>\n                                     {\n                                        `\nconst app = {\n  frontendprojectapi: ${frontendcredentials.frontendcreds.frontendprojectapi}, \n  projectname: ${frontendcredentials.frontendcreds.projectname}\n}\n                                                             \n//make sure you imported the JPI package you want to use that has front end services\n                                                             \nconst register = JPIData.service(app);\nJPIAuth.RegisterMethods.registerUserEmailAndPassword(email, password, mapJson, firstname, lastname, username, usertoken);\nJPIAuth.RegisterMethods.registerUserUsernameAndPassword(username, password, mapJson, firstname, lastname, email, usertoken);\n                                        \n/*\nemail = email of the user (optional if not using a email and password authentication),\nusername = username of the user (optional if not using a username and password authentication),\npassword = password(required),\nmapJson = a JSON object of extra information you want to hold for the user,\nfirstname = firstname of the user (optional),\nlastname = lastname of the user (optional),\nusertoken = usertoken of the user (optional)\n*/                   \n                                        `\n                                     }\n                                   </pre>\n                                  </div>    \n                                 </div>\n                            </div>\n                        )\n                    } else {\n                        return null;\n                    }\n                }\n                \n            if (apiPageConstant === true) {\n                return (\n                    <div>\n                        <h3>Try out our API's Authentication Services</h3>\n                            <div className=\"title-padding\">\n                                <div className=\"text-padding\">\n                                 <h5>JPI Authentication services allow you to manage users by registering users and logging them in while adding specific user details that you want to include.</h5>\n                                 <div className=\"button-padding\">\n                                  <div className=\"float-left\">\n                                   <div className=\"button-spacing\">\n                                   <button className=\"button-purple\" onClick={() => {\n                                       setRegisterMethod({\n                                           registerMethod: true\n                                       })\n                                       setSignInMethod({\n                                           signInMethod: false\n                                       })\n                                   }}>Register Users</button>\n                                   </div>\n                                  </div>\n                                  <button className=\"button-white\" onClick={() => {\n                                    setRegisterMethod({\n                                        registerMethod: false\n                                    })\n                                    setSignInMethod({\n                                        signInMethod: true\n                                    })\n                                  }}>Sign In Users</button>\n                                 </div>\n                                 <RegisterMethod registerMethod={registerMethod.registerMethod} />\n                                 <SignInMethod signInMethod={signInMethod.signInMethod} />\n                                </div>\n                              </div> \n                         </div>\n                )\n            } else {\n                return null;\n            }\n         }\n        if (projectapi === true) {\n           return (\n               <div>\n                  <div className=\"project-component\">\n                     <div className=\"container\">\n                      <LoadingComponent loadingComponent={loading.loading} />\n                      <ApiPageConstant apiPageConstant={apipageconstant.apipageconstant} />\n                     </div>\n                  </div> \n               </div>\n           )\n        } else {\n            return null;\n        }\n    }\n \n \n     if (apipage === true) {\n         return (\n             <div>\n              <div className=\"non-nav-page\">\n               <div className=\"api-page\">\n               <div className=\"container\">\n                  <div className=\"row\">\n                     <div className=\"col-md-6\">\n                     <h3>PROJECT API's</h3>\n                     </div>\n                     <div className=\"col-md-6\">\n                      <div className=\"row\">\n                       <div className=\"col-md-4\">\n                       <h6 className=\"pointer\" onClick={() => {\n                         setProjectApi({\n                             projectapi: true\n                         })\n                         setFindApi({\n                             findapi: false\n                         })\n                         setServiceApi({\n                             serviceapi: false\n                         })\n                             }}>PROJECT API</h6>\n                       </div>\n                       <div className=\"col-md-4\">\n                       <h6 className=\"pointer\" onClick={() => {\n                             setProjectApi({\n                                 projectapi: false\n                             })\n                             setFindApi({\n                                 findapi: true\n                             })\n                             setServiceApi({\n                                 serviceapi: false\n                             })\n                             }}>FIND API</h6>\n                       </div>\n                       <div className=\"col-md-4\">\n                       <h6 className=\"pointer\" onClick={() => {\n                                 setProjectApi({\n                                     projectapi: false\n                                 })\n                                 setFindApi({\n                                     findapi: false\n                                 })\n                                 setServiceApi({\n                                     serviceapi: true\n                                 })\n                             }}>SERVICE</h6>\n                       </div>\n                      </div>\n                     </div>\n                  </div>\n               </div>\n               </div>\n               <ProjectApis projectapi={projectapi.projectapi}/>\n               <FindAPI findapi={findapi.findapi} />\n               <ServiceApi serviceapi={serviceapi.serviceapi} />\n               </div>\n              </div>\n         )\n     } else {\n         return null;\n     }\n }\n\n export default ApiPage","import React, {useState, useEffect, useRef} from 'react';\nimport MinimizeText from '../../Functions/MinimizeText';\nimport { JPIAuth } from '../../Authentication/Auth';\nimport axios from 'axios';\nconst ProjectNotes = ({projectNotes, api}) => {\n    const [notemodal, setNoteModal] = useState({\n        notemodal: false\n    })\n\n    const [noteres, setNoteResponse] = useState({\n        noteres: []\n    })\n    const [currentNote, setCurrentNote] = useState({\n        currentNote: {}\n    })\n    const [currentModalNote, setCurrentModalNote] = useState({\n        currentModalNote: false\n    })\n\n    const componentMounted = useRef(null);\n    useEffect(() => {\n     componentMounted.current = true;\n     if (componentMounted.current) {\n         if (projectNotes === true) {\n             axios.get('https://jpi-backend.herokuapp.com/api/project/getprojectnotes/' + api)\n             .then((body) => {\n                 console.log(body);\n                 setNoteResponse({\n                     noteres: body.data\n                 })\n             }).catch((error) => {\n                 console.log(error);\n             })\n         }\n     }\n    }, [api, projectNotes])\n\n    const CurrentModalNote = ({currentnote , item}) => {\n        const [currentcomments , setCurrentComments] = useState({\n            currentcomments: []\n        })\n        const [originalCodeContainer, setOGCodeContainer] = useState({\n            originalCodeContainer: true\n        })\n        const [codeEditor, setCodeEditor] = useState({\n            codeEditor: false\n        })\n        const [editCodes, setEditCodes] = useState({\n            editCodes: false\n        })\n        useEffect(() => {\n         setCurrentComments({\n             currentcomments: item.comments\n         })\n        }, [item.comments])\n\n        const Comments = () => {\n            return (\n                <div>\n                    {\n                        currentcomments.currentcomments.map((index) => (\n                            <div key={currentcomments.currentcomments.indexOf(index)}>\n                                 <div className=\"comment-container\">\n                                  <h6 className=\"comment d-inline-flex p-2\">{index.username + ': ' + index.message}</h6>\n                                 </div>\n                                </div>\n                        ))\n                    }\n                </div>\n            )\n        }\n\n        const CodeEditorInput = ({codeEditorInput}) => {\n            const [code, setCode] = useState({\n                code: ''\n            })\n            if (codeEditorInput === true) {\n                return (\n                    <div>\n                     <div className=\"button-padding\">\n                      <button className=\"button-black\" onClick={() => {\n                          const data = {\n                              model: code.code,\n                              author: JPIAuth.currentUser.username\n                          }\n                          axios.post('https://jpi-backend.herokuapp.com/api/project/addedits/' + api + '/' + item.noteid, data ,{\n                              headers: {\n                                'Accept': 'application/json',\n                                'Content-Type': 'application/json'\n                              }\n                          }).then((body) => {\n                             console.log(body);\n                          }).catch((error) => {\n                              console.log(error);\n                          })\n\n                      }}>SAVE EDITS</button>\n                     </div>\n                     <div className=\"code-container\">\n                       <textarea className=\"code-editor\" onChange={(e) => {\n                           setCode({\n                               code: e.target.value\n                           })\n                       }} />\n                     </div>\n                    </div>\n                )\n            } else {\n                return null;\n            }\n        }\n\n        const CodeContainer = ({codecontainer}) => {\n            if (codecontainer === true) {\n              return (\n                  <div>\n                    <div className=\"code-container\">\n                     <pre>\n                        {item.model}\n                     </pre>\n                    </div>\n                  </div>\n              )\n            } else {\n                return null;\n            }\n        }\n\n        const EditCodes = ({editcodes}) => {\n            if (editcodes === true) {\n                return (\n                    <div>\n                      <h4 className=\"text-center\">CURRENTLY THERE ARE NO EDITS</h4>\n                    </div>\n                )\n            } else {\n                return null;\n            }\n        }\n\n        if (currentnote === true) {\n            return (\n                <div>\n                 <div className=\"modal-page\">\n                  <div className=\"container\">\n                   <div className=\"modal-padding\">\n                    <div className=\"modal-box\">\n                      <span className=\"closebtndark\" onClick={() => {\n                          setCurrentModalNote({\n                              currentModalNote: false\n                          })\n                      }}>&times;</span>\n                      <div className=\"button-padding\">\n                      <div className=\"float-left\">\n                       <div className=\"button-spacing\">\n                       <button className=\"button-purple\" onClick={() =>{\n                          setOGCodeContainer({\n                              originalCodeContainer: false\n                          })\n                          setCodeEditor({\n                              codeEditor: true\n                          })\n                          setEditCodes({\n                            editCodes: false\n                        })\n                      }}>\n                       EDIT CODE\n                      </button>\n                       </div>\n                      </div>\n                      <div className=\"float-left\">\n                       <div className=\"button-spacing\">\n                       <button className=\"button-black \" onClick={() =>{\n                          setOGCodeContainer({\n                              originalCodeContainer: false\n                          })\n                          setCodeEditor({\n                              codeEditor: false\n                          })\n                          setEditCodes({\n                              editCodes: true\n                          })\n                      }}>\n                       EDITS\n                      </button>\n                       </div>\n                      </div>\n                      <button className=\"button-white\" onClick={() =>{\n                          setOGCodeContainer({\n                              originalCodeContainer: true\n                          })\n                          setCodeEditor({\n                              codeEditor: false\n                          })\n                          setEditCodes({\n                            editCodes: false\n                        })\n                      }}>\n                       ORIGINAL CODE\n                      </button>\n                      </div>\n                      <div className=\"row\">\n                       <div className=\"col-md-8\">\n                        <CodeContainer codecontainer={originalCodeContainer.originalCodeContainer}/>\n                        <CodeEditorInput codeEditorInput={codeEditor.codeEditor}/>\n                        <EditCodes editcodes={editCodes.editCodes}/> \n                       </div>\n                       <div className=\"col-md-4\">\n                        <h6>{item.note}</h6>\n                        <div className=\"input-container\">\n                         <input type=\"text\" className=\"input-comment\" placeholder=\"Comment here\" onKeyDown={(e) => {\n                            if(e.keyCode === 13) {\n                                const data = {\n                                    username: JPIAuth.currentUser.username,\n                                    message: e.target.value\n                                }\n\n                                axios.post('https://jpi-backend.herokuapp.com/api/project/commentonnotes/' + api + '/' + item.noteid, data ,{\n                                    headers: {\n                                        'Accept': 'application/json',\n                                        'Content-Type': 'application/json'\n                                    }, \n                                }).then((body) => {\n                                    currentcomments.currentcomments.push(body.data);\n                                    setCurrentComments({\n                                        currentcomments: currentcomments.currentcomments\n                                    })\n                                }).catch((error) => {\n                                    console.log(error);\n                                })\n                            }\n                         }} />\n                        </div>\n                        <Comments/>\n                       </div>\n                      </div>\n                    </div>\n                   </div>\n                  </div>\n                 </div>\n                </div>\n            )\n        } else {\n            return null;\n        }\n    }\n\n    const NoteResponse = () => {\n       if (noteres.noteres.length === 0) {\n         return (\n             <div>\n              <div className=\"empty-padding\">\n                <div className=\"empty-notes-container\">\n                 <h2>There are no Notes in this project</h2>\n                 <div className=\"button-padding\">\n                 <button className=\"button-all-white\" onClick={() => {\n                     setNoteModal({\n                         notemodal: true\n                     })\n                 }}>CREATE NOTE</button>\n                </div>\n                </div>\n              </div>\n             </div>\n         )\n       } else {\n        return (\n            <div>\n                <div className=\"row\" >\n                    {\n                        noteres.noteres.map((item) => (\n                            <div key={noteres.noteres.indexOf(item)}>\n                            <div className=\"note-container\">\n                            <div className=\"project-note\" onClick={() => {\n                                setCurrentNote({\n                                    currentNote: item\n                                })\n                                setCurrentModalNote({\n                                    currentModalNote: true\n                                })\n                            }}>\n                                <div className=\"float-right\">\n                                <h6>{item.displaydate}</h6>\n                                </div>\n                                <h6>{item.creator}</h6>\n                                <div className=\"text-padding\">\n                                <h5 className=\"text-center\">{MinimizeText(item.note , 20)}</h5>\n                                </div>\n                            </div>\n                            </div>\n                            </div>\n                        ))\n                    }\n                </div>\n            </div>\n        )\n       }\n    }\n\n    const ModalNote = ({modalnote}) => {\n        const [noteinput, setNoteInput] = useState({\n            noteinput: ''\n        })\n        const [notecode, setNoteCode] = useState({\n            notecode: ''\n        })\n        if (modalnote === true) {\n            return (\n                <div>\n                    <div className=\"modal-page\">\n                      <div className=\"container\">\n                        <div className=\"modal-padding\">\n                         <div className=\"modal-box\">\n                          <span className=\"closebtndark\" onClick={() => {\n                              setNoteModal({\n                                  notemodal: false\n                              })\n                          }} >&times;</span>\n                          <h3>CREATE NOTE</h3>\n                          <div className=\"input-container\">\n                            <input type=\"text\" className=\"input-bar\" placeholder=\"Write Note\" onChange={(e) => {\n                                setNoteInput({\n                                    noteinput: e.target.value\n                                })\n                            }} />\n                          </div>\n                          <div className=\"input-container\">\n                            <textarea type=\"text-area-input\" className=\"input-bar\" placeholder=\"Write Code Here\" onChange={(e) => {\n                                setNoteCode({\n                                    notecode: e.target.value\n                                })\n                            }} />\n                          </div>\n                          <div className=\"code-container\">\n                            <pre>\n                                {notecode.notecode}\n                            </pre>\n                          </div>\n                          <div className=\"button-padding\">\n                            <button className=\"button-purple\" onClick={() =>{\n                                const data = {\n                                    creator: JPIAuth.currentUser.username,\n                                    displaydate: '10-19-2019',\n                                    note: noteinput.noteinput,\n                                    model: notecode.notecode\n                                }\n\n                                axios.post('https://jpi-backend.herokuapp.com/api/project/createnote/' + api, data,{\n                                    headers: {\n                                        'Accept': 'application/json',\n                                        'Content-Type': 'application/json'\n                                    },\n                                }).then((body) => {\n                                    noteres.noteres.push(body.data);\n                                    setNoteResponse({\n                                        noteres: noteres.noteres\n                                    })\n                                    setNoteModal({\n                                        notemodal: false\n                                    })\n                                }).catch((error) => {\n                                    console.log(error);\n                                })\n                                \n                            }}>SUBMIT NOTE</button>\n                          </div>\n                         </div>\n                        </div>\n                      </div>\n                    </div>\n                </div>\n            )\n        } else {\n            return null;\n        }\n    }\n    if (projectNotes === true) {\n        return (\n            <div>\n                <div className=\"non-nav-page\">\n                 <div className=\"project-notes\">\n                  <div className=\"container\">\n                    <div className=\"float-right\">\n                      <button className=\"button-purple\" onClick={() => {\n                          setNoteModal({\n                              notemodal: true\n                          })\n                      }}>MAKE A NOTE</button>\n                    </div>\n                    <h3>PROJECT NOTES</h3>\n                    <div className=\"input-container\">\n                      <NoteResponse/>\n                    </div>\n                  </div>\n                 </div>\n                </div>\n                <ModalNote modalnote={notemodal.notemodal} />\n                <CurrentModalNote currentnote={currentModalNote.currentModalNote} item={currentNote.currentNote} />\n            </div>\n        )\n    } else {\n        return null;\n    }\n}\n\nexport default ProjectNotes;","import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nconst ProjectUsers = ({projectusers, api}) => {\n    const [users, setUsers] = useState({\n        users: []\n    })\n    const [usermodal, setUsersModal] = useState({\n        usersmodal: false\n    })\n    const [currentuser, setCurrentUser] = useState({\n        currentuser: {}\n    })\n    useEffect(() => {\n     if (projectusers === true) {\n        axios.get('https://jpi-backend.herokuapp.com/api/project/getuser/' + api)\n        .then((body) => {\n            console.log(body);\n            setUsers({\n                users: body.data\n            })\n        }).catch((error) => {\n            console.log(error);\n        }) \n     }\n    }, [api, projectusers])\n\n    const ShowUsers = () => {\n        return (\n            <div>\n             <div className=\"row\">\n             {\n                    users.users.map((item) => (\n                        <div key={users.users.indexOf(item)}>\n                         <div className=\"users-spacing\">\n                          <div className=\"users-container\" onClick={() => {\n                              setCurrentUser({\n                                  currentuser: item\n                              })\n                              setUsersModal({\n                                  usersmodal: true\n                              })\n                          }}> \n                            <h5 className=\"text-center\">{item.username}</h5>\n                            <div className=\"text-padding\">\n                             <h6 className=\"text-center\">{item.firstname + \" \" + item.lastname}</h6>\n                            </div>\n                          </div>\n                         </div>\n                        </div>\n                    ))\n                }\n             </div>\n            </div>\n        )\n    }\n\n    const UsersModal = ({usersmodal, currentUser}) => {\n        if (usersmodal === true) {\n           return (\n               <div>\n                   <div className=\"modal-page\">\n                    <div className=\"container\">\n                     <div className=\"modal-padding\">\n                      <div className=\"modal-box\">\n                        <span className=\"closebtndark\" onClick={() => {\n                            setUsersModal({\n                                usersmodal: false\n                            })\n                        }}>&times;</span>\n                        <h4>{currentUser.username}</h4>\n                      </div>\n                     </div>\n                    </div>\n                   </div>\n               </div>\n           )\n        } else {\n            return null;\n        }\n    }\n    \n    if (projectusers === true) {\n        return (\n            <div>\n                <div className=\"non-nav-page\">\n                  <div className=\"project-users\">\n                   <div className=\"container\">\n                    <h3>USERS</h3>\n                    <div className=\"text-padding\">\n                     <ShowUsers/>\n                    </div>\n                   </div>\n                  </div>\n                  <UsersModal usersmodal={usermodal.usersmodal} currentUser={currentuser.currentuser} />\n                </div>\n            </div>\n        )\n    } else {\n        return null;\n    }\n}\n\nexport default ProjectUsers;","import React, {useState, useEffect, useRef} from 'react';\nimport Search from '../../Functions/Search';\nimport {NavLink} from 'react-router-dom';\nimport LoadingComponent from '../../Functions/LoadingComp'\nimport axios from 'axios'\nconst ProjectAnalytics = ({projectanalytics, api}) => {\n    const [datamodel, setDataModel] = useState({\n        datamodel: false\n    })\n    const [projectusers, setProjectUsers] = useState({\n        projectusers: []\n    })\n    const [models, setModels] = useState({\n        models: []\n    })\n    const [modelShow, setModelShow] = useState({\n        modelShow: false\n    })\n    const [loading, setLoading] = useState({\n        loading: true\n    })\n\n    const componentMounted = useRef(false);\n\n    useEffect(() => {\n      componentMounted.current = true;\n      if (projectanalytics === true) {\n        setTimeout(() => {\n          if (componentMounted.current) {\n            axios.get('https://jpi-backend.herokuapp.com/api/project/getprojectusers/' + api)\n            .then((body) => {\n                setProjectUsers({\n                    projectusers: body.data\n                })\n            }).catch((error) => {\n                console.log(error);\n            })\n      \n            axios.get('https://jpi-backend.herokuapp.com/projectanalytics/getmodels/' + api)\n            .then((body) => {\n                setModels({\n                    models: body.data\n                })\n                setLoading({\n                    loading: false\n                })\n                setModelShow({\n                    modelShow: true\n                })\n            }).catch((error) => {\n                console.log(error);\n            })\n          }\n        }, 1000);\n      }\n      return () => {\n          componentMounted.current = false\n        }\n    }, [api, projectanalytics])\n\n    console.log(loading.loading)\n\n    const CreateDataModel = ({dataform}) => {\n        const [modelname, setModelName] = useState({\n            modelname: ''\n        })\n        const [modeldescription, setModelDescription] = useState({\n            modeldescription: ''\n        })\n        const [dataviewers, setDataViewers] = useState({\n            dataviewers: []\n        })\n        const [datadevs , setDataDevs] = useState({\n            datadevs: []\n        })\n        const [datatype, setDataType] = useState({\n            datatype: \"table\"\n        })\n        if (dataform === true) {\n            return (\n                <div>\n                 <div className=\"modal-page\">\n                  <div className=\"container\">\n                   <div className=\"modal-padding\">\n                    <div className=\"modal-box\">\n                    <span className=\"closebtndark\" onClick={() => {\n                        setDataModel({\n                            datamodel: false\n                        })\n                    }}>&times;</span>\n                    <h4>CREATE DATA MODEL</h4>\n                    <div className=\"input-container\">\n                     <input type=\"text\" className=\"input-bar\" placeholder=\"Model Name\" onChange={(e) => {\n                         setModelName({\n                             modelname: e.target.value\n                         })\n                     }}/>\n                    </div>\n                    <div className=\"input-container\">\n                     <textarea className=\"text-area-input\" placeholder=\"Model Description\" onChange={(e) => {\n                         setModelDescription({\n                             modeldescription: e.target.value\n                         })\n                     }} />\n                    </div>\n                    <div className=\"input-container\">\n                    <Search \n                    inputstyle=\"input-bar\"\n                    renderstyle=\"render-card\"\n                    output={[\"username\" , \"fullname\"]}\n                    placeholder=\"Add data scienctist to view this data\"\n                    longRender={false}\n                    variable={projectusers.projectusers}\n                    callback={(item) => {\n                        dataviewers.dataviewers.push(item.userid);\n                        setDataViewers({\n                            dataviewers: dataviewers.dataviewers\n                        })\n                    }}\n                    />\n                    </div>\n                    <div className=\"input-container\">\n                    <Search\n                    inputstyle=\"input-bar\"\n                    renderstyle=\"render-card\"\n                    output={[\"username\" , \"fullname\"]}\n                    placeholder=\"Add developers to this data\"\n                    longRender={false}\n                    variable={projectusers.projectusers}\n                    callback={(item) => {\n                        datadevs.datadevs.push(item.userid);\n                        setDataDevs({\n                            datadevs: datadevs.datadevs\n                        })\n                    }}\n                    />\n                    </div>\n                    <div className=\"input-container\">\n                     <select className=\"input-bar\" onChange={(e) => {\n                         setDataType({\n                            datatype: e.target.value\n                         })\n                     }}>\n                        <option value=\"table\">TABLE</option>\n                        <option value=\"pie\">PIE GRAPHS</option>\n                        <option value=\"bar\">BAR GRAPHS</option>\n                        <option value=\"line\">LINE GRAPHS</option>\n                     </select>\n                    </div>\n                    <div className=\"button-padding\">\n                     <button className=\"button-white\" onClick={() => {\n                         const data = {\n                             modelname: modelname.modelname,\n                             modeldescription: modeldescription.modeldescription,\n                             dataviewers: dataviewers.dataviewers,\n                             datadevs: datadevs.datadevs,\n                             datatype: datatype.datatype\n                         }\n\n                         axios.post('https://jpi-backend.herokuapp.com/api/project/createmodel/' + api, data,{\n                             headers: {\n                                'Accept': 'application/json',\n                                'Content-Type': 'application/json'\n                             },\n                         }).then((body) => {\n                             models.models.push(body.data);\n                             setModels({\n                                 models: models.models\n                             })\n                             setDataModel({\n                                 datamodel: false\n                             })\n                         }).catch((error) =>{ \n                             console.log(error);\n                         })\n                     }}>CREATE MODEL</button>\n                    </div>\n                    </div>\n                   </div>\n                  </div>\n                 </div>\n                </div>\n            )\n        } else {\n            return null;\n        }\n    }\n\n    console.log(models.models)\n\n    const ModelCards = ({modelcards}) => {\n        const [currentModelCard, setModelCard] = useState({\n            currentModelCard: false\n        })\n        const [currentModelItem, setCurrentModelItem] = useState({\n            currentModelItem: {}\n        })\n\n        const CurrentModelCard = ({currentmodelcard, item}) => {\n            const [itemName, setItemName] = useState({\n                itemname: \"\"\n            })\n            const [itemDescription, setItemDescription] = useState({\n                itemDescription: \"\"\n            })\n            const NullItem = () => {\n                return item.modeldescription === null ? \"There is no current description. Write one !\" : item.modeldescription\n            }\n            if (currentmodelcard === true) {\n                return (\n                    <div>\n                     <div className=\"modal-page\">\n                      <div className=\"container\">\n                        <div className=\"modal-padding\">\n                         <div className=\"modal-box\">\n                          <span className=\"closebtndark\" onClick={() => {\n                              setModelCard({\n                                  currentModelCard: false\n                              })\n                          }}>&times;</span>\n                         <h3>{item.modelname}</h3>\n                         <div className=\"input-container\">\n                          <input type=\"text\" className=\"input-bar\" placeholder={item.modelname} onChange={(e) => {\n                              setItemName({\n                                  itemname: e.target.value\n                              })\n                          }} />\n                         </div>\n                         <div className=\"input-container\">\n                          <input type=\"text\" className=\"input-bar\" placeholder={NullItem()} onChange={(e) => {\n                              setItemDescription({\n                                  itemDescription: e.target.value\n                              })\n                          }} />\n                         </div>\n                         <div className=\"button-padding\">\n                          <button className=\"button-purple\" onClick={() => {\n                              const data = {title: itemName.itemname, description: itemDescription.itemDescription}\n                              axios.post('https://jpi-backend.herokuapp.com/projectanalytics/setModelName/' + api + '/' + item.modelapi , data,{\n                                headers: {\n                                'Accept': 'application/json',\n                                'Content-Type': 'application/json'\n                                },\n                              }).then((body) => {\n                                  let currentIndex = null\n                                  for (const item of models.models) {\n                                      if (item.modelapi === body.data.modelapi) {\n                                          currentIndex = models.models.indexOf(item);\n                                      }\n                                  }\n                                  if (~currentIndex) {\n                                      models.models[currentIndex] = body.data\n                                  }\n\n                                  setModels({\n                                      models: models.models\n                                  })\n                                  setCurrentModelItem({\n                                      currentModelItem: false\n                                  })\n                              }).catch((error) => {\n                                  console.log(error);\n                              })\n                          }}>EDIT</button>\n                         </div>\n                         </div>\n                        </div>\n                      </div>\n                     </div>\n                    </div>\n                )\n            } else {\n                return null;\n            }\n        }\n\n        if (modelcards === true) {\n            if (models.models.length === 0) {\n                return (\n                    <div>\n                     <div className=\"empty-padding\">\n                     <div className=\"empty-model-container\">\n                      <h2>You have No Models right now</h2>\n                      <div className=\"button-padding\">\n                        <button className=\"button-all-white\" onClick={() => {\n                            setDataModel({\n                                datamodel: true\n                            })\n                        }}>CREATE MODEL</button>\n                      </div>\n                     </div>\n                     </div>\n                    </div>\n                )\n            } else {\n                return (\n                    <div>\n                     <div className=\"row\">\n                        {\n                            models.models.map((item) => (\n                                <div key={models.models.indexOf(item)}>\n                                 <div className=\"card-spacing\">\n                                  <div className=\"model-edit-container\">\n                                   <div className=\"float-right\">\n                                    <button className=\"button-all-white\" onClick={() => {\n                                         setModelCard({\n                                             currentModelCard: true\n                                         })\n                                         setCurrentModelItem({\n                                             currentModelItem: item\n                                         })\n                                     }} >Edit</button>\n                                   </div>\n                                  </div>\n                                  <NavLink to={item.redirectapi} className=\"navlink\">\n                                  <div className={\"model-card \" + item.modeltype}>\n                                    <h6 className=\"color-white\">{item.modeltype}</h6>\n                                    <h4 className=\"text-center color-white\">{item.modelname}</h4>\n                                  </div>\n                                  </NavLink>\n                                 </div>\n                                 <CurrentModelCard currentmodelcard={currentModelCard.currentModelCard} item={currentModelItem.currentModelItem} />\n                                </div>\n                            ))\n                        }\n                     </div>\n                    </div>\n                )\n            }\n        } else {\n            return null;\n        }\n    }\n\n    if (projectanalytics === true) {\n        return (\n            <div>\n                <div className=\"non-nav-page\">\n                 <div className=\"analyticspage\">\n                  <div className=\"float-right\">\n                    <div className=\"button-padding\">\n                    <button className=\"button-purple\" onClick={() => {\n                        setDataModel({\n                            datamodel: true\n                        })\n                    }}>CREATE DATA MODEL</button>\n                    </div>\n                  </div>\n                  <h3>PROJECT ANALYTICS</h3>\n                  <div className=\"input-container\">\n                     <ModelCards modelcards={modelShow.modelShow}/>\n                     <LoadingComponent loadingComponent={loading.loading} />\n                  </div>\n                 </div>\n                </div>\n                <CreateDataModel dataform={datamodel.datamodel} /> \n                \n            </div>\n        )\n    } else {\n        return null;\n    }\n}\n\nexport default ProjectAnalytics;","import React, {useState, useEffect} from 'react';\nimport generateId from '../../Functions/Miscfuncs';\nimport axios from 'axios';\nconst Projectauth = ({projectauth , projectapi}) => {\n    const [addUserModal, setAddUsersModal] = useState({\n        addUserModal: false\n    })\n    const [users, setUsers] = useState({\n        users: []\n    })\n    const [data, setData] = useState({\n        data: {}\n    })\n    const [trackingData, setTrackingData] = useState({\n        trackingData: []\n    })\n    const [usersModal, setUsersModal] = useState({\n        usersmodal: false\n    })\n    const [currentusers, setCurrentUser] = useState({\n        currentusers: {}\n    })\n    \n    useEffect(() => {\n     setTimeout(() => {\n        console.log(projectapi)\n        axios.get('https://jpi-backend.herokuapp.com/projectauth/getprojectauthcreds/' + projectapi)\n        .then((body) => {\n            setData({\n                data: body.data\n            })\n            setTrackingData({\n                trackingData: body.data.trackinglabels\n            })\n            const userall = [];\n            for (let i = 0; i < body.data.users.length; i++) {\n                body.data.users[i].response[\"userid\"] = body.data.users[i].useruid\n                userall.push(body.data.users[i].response)\n            }\n            setUsers({\n                users: userall\n            })\n        }).catch((error) => {\n            console.log(error);\n        })\n     }, 500);\n    }, [projectapi])\n\n\n    const NullifiedData = (current) => {\n        if (current === null) {\n            return \"null\"\n        } else {\n            return current\n        }\n    }\n    const MinimizeText = (text , int) => {\n     if (text.length > int) {\n         return text.substring(0, int + 1) + '...'\n     } else {\n         return text\n     }\n    }\n    const StringifyBoolean = (text) => {\n        if (typeof text === \"boolean\") {\n            return text.toString()\n        } else {\n            return text\n        }\n    }\n\n    const UsersModal = ({usersmodal , item}) => {\n        const [editemail, setEditEmail] = useState({\n            editemail: ''\n        })\n        const [editfirstname, setEditFirstname] = useState({\n            editfirstname: ''\n        })\n        const [editlastname, setEditLastName] = useState({\n            editlastname: ''\n        })\n        const [editusername, setEditUserName] = useState({\n            editusername: ''\n        })\n        const [editusertoken, setEditUserToken] = useState({\n            editusertoken: ''\n        })\n        let mapJson  ={}\n        if (usersmodal === true) {\n            return (\n                <div>\n                 <div className=\"modal-page\">\n                  <div className=\"container\">\n                   <div className=\"modal-padding\">\n                    <div className=\"modal-box\">\n                     <span className=\"closebtndark\" onClick={() => {\n                         setUsersModal({\n                             usersmodal: false\n                         })\n                     }}>&times;</span>\n                     <h4>CURRENT USER</h4>\n                     <div className=\"text-padding\">\n                    <h6>{\"User id: \" + item.userid}</h6>\n                     </div>\n                     <div className=\"input-container\">\n                     <table>\n                       <tbody>\n                       <tr className=\"table-data-headers\">\n                        {\n                            data.data.labels.map((index) => (\n                            <th className=\"table-header\" key={data.data.labels.indexOf(index)}>{index}</th>\n                            ))\n                        }\n                     </tr>\n                     <tr className=\"table-row\">\n                        {\n                            data.data.labels.map((current) => (\n                                <td className=\"table-item\" key={data.data.labels.indexOf(current)}>{StringifyBoolean(MinimizeText(NullifiedData(item)[current] , 7))}</td>\n                            ))\n                        }\n                     </tr>\n                     </tbody>  \n                     </table>\n                     <div className=\"row\">\n                     <div className=\"spacing-container\">\n                        <div className=\"input-container\">\n                          <input type=\"text\" className=\"input-bar\" placeholder=\"Email\" onChange={(e) => {\n                             setEditEmail({\n                                 editemail: e.target.value\n                             })\n                          }} />\n                        </div>\n                     </div>\n                     <div className=\"spacing-container\">\n                      <div className=\"input-container\">\n                          <input type=\"text\" className=\"input-bar\" placeholder=\"First Name\" onChange={(e) => {\n                             setEditFirstname({\n                                 editfirstname: e.target.value\n                             })\n                          }} />\n                        </div>\n                     </div>\n                     <div className=\"spacing-container \">\n                        <div className=\"input-container\">\n                          <input type=\"text\" className=\"input-bar\" placeholder=\"Last Name\" onChange={(e) => {\n                            setEditLastName({\n                                editlastname: e.target.value\n                            })\n                          }} />\n                        </div>\n                     </div>\n                     <div className=\"spacing-container\">\n                        <div className=\"input-container\">\n                          <input type=\"text\" className=\"input-bar\" placeholder=\"Username\" onChange={(e) => {\n                            setEditUserName({\n                                editusername: e.target.value\n                            })\n                          }} />\n                        </div>\n                     </div>\n                     <div className=\"spacing-container\">\n                        <div className=\"input-container\">\n                          <input type=\"text\" className=\"input-bar\" placeholder=\"Usertoken\" onChange={(e) => {\n                            setEditUserToken({\n                                editusertoken: e.target.value\n                            })\n                          }} />\n                        </div>\n                     </div>\n                      {\n                          trackingData.trackingData.map((item) => (\n                              <div key={generateId(50)}>\n                                <div className=\"spacing-container\">\n                                <div className=\"input-container\">\n                                 <input type=\"text\" className=\"input-bar\" placeholder={item} onChange={(e) => {\n                                     mapJson[item] = e.target.value\n                                 }} />\n                                </div>\n                                </div>\n                              </div>\n                          ))\n                      }\n                     </div>\n                     <div className=\"button-padding\">\n                      <button className=\"button-purple\" onClick={() => {\n                         let visuals = {};\n                         let key;\n                         const regData = {\n                            email: editemail.editemail,\n                            firstname: editfirstname.editfirstname,\n                            lastname: editlastname.editlastname,\n                            username: editusername.editusername,\n                            usertoken: editusertoken.editusertoken\n                         }\n                         for (key in mapJson) {\n                             if (mapJson.hasOwnProperty(key)) {\n                                 visuals[key] = mapJson[key]\n                             }\n                         }\n\n                         for (key in regData) {\n                             if (regData.hasOwnProperty(key)) {\n                                 visuals[key] = regData[key]\n                             }\n                         }\n\n                         const data = {\n                             email: editemail.editemail,\n                             firstname: editfirstname.editfirstname,\n                             lastname: editlastname.editlastname,\n                             username: editusername.editusername,\n                             usertoken: editusertoken.editusertoken,\n                             mapJson: mapJson,\n                             visuals: visuals\n                         }\n\n                         axios.post('https://jpi-backend.herokuapp.com/projectauth/edituserinproject/' + projectapi + '/' + item.userid, data,{\n                             headers: {\n                                'Accept': 'application/json',\n                                'Content-Type': 'application/json'\n                             },\n                         }).then((body) => {\n                             body.data.response[\"userid\"] = body.data.useruid;\n                             let checker = null;\n                             for (const item of users.users) {\n                                 if (item.userid === body.data.useruid) {\n                                    checker = users.users.indexOf(item)\n                                 }\n                             }\n                             if (~checker) {\n                                 users.users[checker] = body.data.response\n                             }\n\n                             setUsers({\n                                 users: users.users\n                             })\n                             setUsersModal({\n                                 usersmodal: false\n                             })\n                         }).catch((error) => {\n                             console.log(error);\n                         })\n\n                      }}>Edit Changes</button>\n                     </div>\n                     </div>\n                    </div>\n                   </div>\n                  </div>\n                 </div>\n                </div>\n            )\n        } else {\n            return null;\n        }\n    }\n    \n    const AddUsersModal = ({addUserModal}) => {\n        const [firstname, setFirstName] = useState({\n            firstname: ''\n        })\n        const [lastname, setLastName] = useState({\n            lastname: ''\n        })\n        const [email, setEmail] = useState({\n            email: ''\n        })\n        const [username ,setUsername] = useState({\n            username: ''\n        })\n        const [password , setPassword] = useState({\n            password: ''\n        })\n        const [authmethod, setAuthMethod] = useState({\n            authmethod: \"Email and Password\"\n        })\n        const [usertoken, setUserToken] = useState({\n            usertoken: ''\n        })\n\n        const AuthMethod = () => {\n            if (data.data.authmethod === \"\") {\n                return (\n                    <div>\n                      <div className=\"input-contianer\">\n                       <select className=\"input-bar\" onChange={(e) => {\n                        setAuthMethod({\n                            authmethod: e.target.value\n                        })\n                       }}>\n                         <option value=\"Email and Password\">Email and Password</option>\n                         <option value=\"Username and Password\">Username and Password</option>\n                       </select>\n                      </div>\n                    </div>\n                )\n            } else {\n                return null;\n            }\n        }\n\n        let mapJson = {}\n        if (addUserModal === true) {\n            return (\n                <div>\n                  <div className=\"modal-page\">\n                   <div className=\"container\">\n                    <div className=\"modal-padding\">\n                      <div className=\"modal-box\">\n                      <span className=\"closebtndark\" onClick={() => {\n                          setAddUsersModal({\n                              addUserModal: false\n                          })\n                      }}>&times;</span>\n                      <h4>ADD USER</h4>\n                      <AuthMethod/>\n                      <div className=\"input-container\">\n                        <input type=\"text\" className=\"input-bar\" placeholder=\"First Name\" onChange={(e) => {\n                            setFirstName({\n                                firstname: e.target.value\n                            })\n                        }} />\n                      </div>\n                      <div className=\"input-container\">\n                        <input type=\"text\" className=\"input-bar\" placeholder=\"Last Name\" onChange={(e) => {\n                            setLastName({\n                                lastname: e.target.value\n                            })\n                        }} />\n                      </div>\n                      <div className=\"input-container\">\n                        <input type=\"text\" className=\"input-bar\" placeholder=\"Email\" onChange={(e) => {\n                            setEmail({\n                                email: e.target.value\n                            })\n                        }} />\n                      </div>\n                      <div className=\"input-container\">\n                       <input type=\"text\" className=\"input-bar\" placeholder=\"Username\" onChange={(e) => {\n                            setUsername({\n                                username: e.target.value\n                            })\n                        }} />\n                      </div>\n                      <div className=\"input-container\">\n                       <input type=\"text\" className=\"input-bar\" placeholder=\"Usertoken\" onChange={(e) => {\n                            setUserToken({\n                                usertoken: e.target.value\n                            })\n                        }} />\n                      </div>\n                      <div className=\"input-container\">\n                        <input type=\"password\" className=\"input-bar\" placeholder=\"Password\" onChange={(e) => {\n                            setPassword({\n                                password: e.target.value\n                            })\n                        }} />\n                      </div>\n                      {\n                          trackingData.trackingData.map((item) => (\n                              <div key={generateId(20)} className=\"input-container\">\n                                <input type=\"text\" className=\"input-bar\" placeholder={item} onChange={(e) => {\n                                    mapJson[item] = e.target.value\n                                }} />\n                              </div>\n                          ))\n                      }\n                      <div className=\"button-padding\">\n                       <button className=\"button-purple\" onClick={() => {\n                           const mapNames = [];\n                           const object = Object.keys(mapJson);\n                           for (let i = 0; i < object.length; i++) {\n                               mapNames.push(object[i]);\n                           };\n                           let visualtest = {};\n                            visualtest[\"username\"] = username.username;\n                            visualtest[\"password\"] = password.password;\n                            visualtest[\"firstname\"] = firstname.firstname;\n                            visualtest[\"lastname\"] = lastname.lastname;\n                            visualtest[\"email\"] = email.email;\n                            visualtest[\"usertoken\"] = usertoken.usertoken;\n                            let visuals = {};\n                            let key;\n                            for (key in mapJson) {\n                                if (mapJson.hasOwnProperty(key)) {\n                                    visuals[key] = mapJson[key]\n                                }\n                            }\n                            for (key in visualtest) {\n                                if (visualtest.hasOwnProperty(key)) {\n                                    visuals[key] = visualtest[key]\n                                }\n                            }\n                           \n                            const data = {\n                            email: email.email,\n                            password: password.password,\n                            firstname: firstname.firstname,\n                            lastname: lastname.lastname,\n                            username: username.username,\n                            usertoken: usertoken.usertoken,\n                            mapJson: mapJson,\n                            mapNames: mapNames,\n                            visuals: visuals,\n                            authmethod: authmethod.authmethod\n                            }\n\n                            axios.post('https://jpi-backend.herokuapp.com/projectauth/addusertoproject/' + projectapi, data,{\n                                headers: {\n                                    'Accept': 'application/json',\n                                    'Content-Type': 'application/json'\n                                }, \n                            }).then((body) => {\n                                console.log(body)\n                                body.data.response[\"userid\"] = body.data.useruid;\n                                users.users.push(body.data.response);\n                                setUsers({\n                                    users: users.users\n                                })\n                                setAddUsersModal({\n                                    addUserModal: false\n                                })\n                            }).catch((error) => {\n                                console.log(error);\n                            })\n                       }}>ADD USER</button>\n                      </div>\n                      </div>\n                    </div>\n                   </div>\n                  </div>\n                </div>\n            )\n        } else {\n            return null;\n        }\n    }\n\n    const TableUsers = () => {\n        if (users.users.length === 0) {\n            return (\n                <div>\n                 <div className=\"empty-padding\">\n                  <div className=\"empty-auth-container\">\n                      <h2>There are no users for this project</h2>\n                      <div className=\"button-padding\">\n                       <button className=\"button-purple\" onClick={() => {\n                           setAddUsersModal({\n                               addUserModal: true\n                           })\n                       }}>Add a User</button>\n                      </div>\n                  </div>\n                 </div>\n                </div>\n            )\n        } else {\n           return (\n            <div>\n            <div className=\"table-container\">\n             <table className=\"table-data\">\n              <tbody>\n                <tr className=\"table-data-headers\">\n                 {\n                     data.data.labels.map((item) => (\n                     <th className=\"table-header\" key={data.data.labels.indexOf(item)}>{item}</th>\n                     ))\n                 }\n                </tr>\n                {\n                    users.users.map((item) => (\n                        <tr className=\"table-row\" key={users.users.indexOf(item)} onClick={() => {\n                            setCurrentUser({\n                                currentusers: item\n                            })\n                            setUsersModal({\n                                usersmodal: true\n                            })\n                        }} >\n                          {\n                              data.data.labels.map((index) => (\n                              <td className=\"table-item\" key={data.data.labels.indexOf(index)}>{StringifyBoolean(MinimizeText(NullifiedData(item)[index], 7))}</td>\n                              ))\n                          }\n                        </tr>\n                    ))\n                }\n              </tbody>\n             </table>\n            </div>\n           </div>\n           )\n        }\n    }\n\n    const AuthMethodShow = () => {\n        const [authMethodValue, setAuthMethodValue] = useState({\n            authMethodValue: \"Email and Password\"\n        })\n        if (data.data.authmethod === \"\") {\n            return (\n                <div>\n                  <div className=\"input-container\">\n                    <label>Please pick a type authentication method</label>\n                    <select className=\"input-bar\" onChange={(e) => {\n                        setAuthMethodValue({\n                            authMethodValue: e.target.value\n                        })\n                    }}>\n                      <option value=\"Email and Password\">Email and Password</option>\n                      <option value=\"Username and Password\">Username and Password</option>\n                    </select>\n                  </div>\n                  <div className=\"button-padding\">\n                    <button className=\"button-purple\" onClick={() => {\n                        const data = {authmethod: authMethodValue.authMethodValue}\n                        axios.post('https://jpi-backend.herokuapp.com/projectauth/setauthmethod/' + projectapi, data,{\n                            headers: {\n                                'Accept': 'application/json',\n                                'Content-Type': 'application/json'\n                            },\n                        }).then((body) => {\n                            setData({\n                                data: body.data\n                            })\n                        }).catch((error) => {\n                            console.log(error)\n                        })\n                    }}>Set Authentication Method</button>\n                  </div>\n                </div>\n            )\n        } else {\n            return (\n                <div>\n                 <div className=\"text-padding\">\n                   <h6>{\"Authentication: \" + data.data.authmethod}</h6>\n                 </div>\n                </div>\n            )\n        }\n    }\n\n  if (projectauth === true) {\n      return (\n          <div>\n            <div className=\"non-nav-page\">\n             <div className=\"project-auth\">\n              <div className=\"container\">\n               <div className=\"float-right\">\n                <button className=\"button-purple\" onClick={() => {\n                  setAddUsersModal({\n                      addUserModal: true\n                  })\n                }} >ADD USER</button>\n               </div>\n               <h3>PROJECT AUTHENTICATION</h3>\n               <AuthMethodShow/>\n               <TableUsers/>\n              </div>\n             </div>\n            </div>\n            <AddUsersModal addUserModal={addUserModal.addUserModal} />\n            <UsersModal usersmodal={usersModal.usersmodal} item={currentusers.currentusers} />\n          </div>\n      )\n  } else {\n      return null;\n  }\n}\n\nexport default Projectauth;","import React from 'react';\n\nconst LoadingBluePage = ({loadingprocess}) => {\n    if (loadingprocess === true) {\n        return (\n            <div>\n              <div className=\"modal-page-blue\">\n                <div className=\"container\">\n                  <div className=\"major-padding-page\">\n                    <div className=\"row\">\n                      <div className=\"col-md-12\">\n                      <div className=\"d-flex justify-content-center\">\n                      <div className=\"loader\" title=\"2\">\n                      <svg version=\"1.1\" id=\"loader-1\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"10px\" y=\"10px\"\n                          width=\"40px\" height=\"40px\" viewBox=\"0 0 50 50\" xmlSpace=\"preserve\">\n                      <path fill=\"#000\" d=\"M43.935,25.145c0-10.318-8.364-18.683-18.683-18.683c-10.318,0-18.683,8.365-18.683,18.683h4.068c0-8.071,6.543-14.615,14.615-14.615c8.072,0,14.615,6.543,14.615,14.615H43.935z\">\n                          <animateTransform attributeType=\"xml\"\n                          attributeName=\"transform\"\n                          type=\"rotate\"\n                          from=\"0 25 25\"\n                          to=\"360 25 25\"\n                          dur=\"0.6s\"\n                          repeatCount=\"indefinite\"\n                          fontSize=\"50px\"/>\n                          </path>\n                      </svg>\n                      </div>\n                      </div>\n                      </div>\n                    </div>\n                    <div className=\"row\">\n                     <div className=\"col-md-12\">\n                     <div className=\"text-padding-major\">\n                      <h3 className=\"text-white text-center\">LOADING PROJECT CONSOLE</h3>\n                     </div>\n                     </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n        )\n    } else {\n        return null;\n    }\n}\n\nexport default LoadingBluePage;","import React, {useState, useEffect, useRef} from 'react';\nimport ApiPage from './ProjectApi';\nimport ProjectNotes from './ProjectNotes';\nimport ProjectUsers from './ProjectUsers';\nimport ProjectAnalytics from './ProjectAnalytics';\nimport Projectauth from './Projectauth';\nimport {NavLink} from 'react-router-dom';\nimport LoadingBluePage from '../../MiscComps/Wholeloadingblue';\nimport axios from 'axios';\nconst ProjectDetails = (props) => {\n    const [apipage, setApiPage] = useState({\n        apipage: true\n    })\n    const [notes, setNotes] = useState({\n        notes:  false\n    })\n    const [userspage, setUsersPage] = useState({\n        userspage: false\n    })\n    const [projectAnalytics, setProjectAnalytics] = useState({\n        projectAnalytics: false\n    })\n    const [projectname, setProjectName] = useState({\n        projectName: ''\n    })\n    const [projectauth, setProjectAuth] = useState({\n        projectauth: false\n    })\n    const [loadingpage, setLoadingPage] = useState({\n        loadingpage: true\n    })\n\n    const componentDidMount = useRef(null);\n    useEffect(() => {\n     componentDidMount.current = true\n     const {projectapi} = props.match.params;\n     if (projectapi !== undefined) {\n        if (componentDidMount.current) {\n            setTimeout(() => {\n                axios.get('https://jpi-backend.herokuapp.com/api/project/getprojectcreds/' + projectapi)\n                .then((body) => {\n                    console.log(body)\n                    setProjectName({\n                        projectName: body.data\n                    })\n                    setLoadingPage({\n                        loadingpage: false\n                    })\n                }).catch((error) => {\n                    console.log(error);\n                })\n            }, 1000);\n        } else if (componentDidMount.current === false) {\n            setLoadingPage({\n                loadingpage: true\n            })\n        }\n     }\n    }, [props.match.params])\n\n    return (\n        <div>\n        <div className=\"project-title\">\n          <div className=\"float-right\">\n            <NavLink className=\"navlink\" to=\"/Dash\"><button className=\"button-white\">DASHBOARD</button></NavLink>\n          </div>\n          <h4>{projectname.projectName}</h4>\n        </div>\n        <div className=\"project\">\n        <div className=\"project-navigation\">\n         <div className=\"container\">\n         <div className=\"nav-comp-container\">\n          <h6 className=\"pointer\" onClick={() => {\n            setApiPage({\n                apipage: true\n            })\n            setNotes({\n                notes: false\n            })\n            setUsersPage({\n                userspage: false\n            })\n            setProjectAnalytics({\n                projectAnalytics: false\n            })\n            setProjectAuth({\n                projectauth: false\n            })\n          }}>API's</h6>\n          </div>\n          <div className=\"nav-comp-container\">\n          <h6 className=\"pointer\" onClick={() => {\n            setApiPage({\n                apipage: false\n            })\n            setNotes({\n                notes: false\n            })\n            setUsersPage({\n                userspage: false\n            })\n            setProjectAnalytics({\n                projectAnalytics: true\n            })\n            setProjectAuth({\n                projectauth: false\n            })\n          }}>Analytics</h6>\n          </div>\n          <div className=\"nav-comp-container\">\n          <h6 className=\"pointer\" onClick={() => {\n            setApiPage({\n                apipage: false\n            })\n            setNotes({\n                notes: false\n            })\n            setUsersPage({\n                userspage: false\n            })\n            setProjectAnalytics({\n                projectAnalytics: false\n            })\n            setProjectAuth({\n                projectauth: true\n            })\n          }}>Authentication</h6>\n          </div>\n          <div className=\"nav-comp-container\">\n          <h6 className=\"pointer\" onClick={() => {\n            setApiPage({\n                apipage: false\n            })\n            setNotes({\n                notes: true\n            })\n            setUsersPage({\n                userspage: false\n            })\n            setProjectAnalytics({\n                projectAnalytics: false\n            })\n            setProjectAuth({\n                projectauth: false\n            })\n          }}>Notes</h6>\n          </div>\n          <div className=\"nav-comp-container\">\n          <h6 className=\"pointer\" onClick={() => {\n            setApiPage({\n                apipage: false\n            })\n            setNotes({\n                notes: false\n            })\n            setUsersPage({\n                userspage: true\n            })\n            setProjectAnalytics({\n                projectAnalytics: false\n            })\n            setProjectAuth({\n                projectauth: false\n            })\n          }}>Users</h6>\n          </div>\n         </div>\n        </div>\n        <div>\n            <ApiPage apipage={apipage.apipage} api={props.match.params.projectapi} />\n            <ProjectNotes projectNotes={notes.notes} api={props.match.params.projectapi} />\n            <ProjectUsers projectusers={userspage.userspage} api={props.match.params.projectapi} />\n            <ProjectAnalytics projectanalytics={projectAnalytics.projectAnalytics} api={props.match.params.projectapi} />\n            <LoadingBluePage loadingprocess={loadingpage.loadingpage} />\n            <Projectauth projectauth={projectauth.projectauth} projectapi={props.match.params.projectapi} />\n        </div>\n        </div>\n        </div>\n    )\n}\n\nexport default ProjectDetails;","import React from 'react';\nimport {Route, Redirect} from 'react-router-dom';\nconst PrivateRoute = ({path ,comp, isAuthenticated, ...rest}) => {\n\n    if (isAuthenticated === true) {\n        return <Route path={path} component={comp} exact/>\n    } else {\n        return <Redirect to=\"/\" />\n    }\n \n}\n\nexport default PrivateRoute;","import React from 'react';\nimport {NavLink} from 'react-router-dom';\n\nconst AnalyticNav = ({navtitle , projectapi}) => {\n    return (\n        <div>\n          <div className=\"data-nav-bar\">\n          <div className=\"float-right\">\n            <NavLink to={\"/project/\" + projectapi} className=\"navlink\">\n            <button className=\"button-purple\">Project Models</button>\n            </NavLink> \n          </div>\n          <h5>{navtitle}</h5>\n         </div>  \n        </div>\n    )\n}\n\nexport default AnalyticNav;","import React, {useState} from 'react';\nimport axios from 'axios';\nconst TableData = ({tabledata, data, array, projectapi, tableapi }) => {\n    const [currentItem, setCurrentItem] = useState({\n        currentItem: {}\n    })\n    const [itemModal, setItemModal] = useState({\n        itemModal: false\n    })\n    const [datatable, setDataTable] = useState({\n        data: []\n    })\n    const [credentialModal, setCredentialModal] = useState({\n        credentialModal: false\n    })\n\n   const NullifiedData = (current) => {\n    if (current === null || current === undefined) {\n        return \"null\"\n    } else {\n        return current\n    }\n  }\n\n\n   const CurrentItemModal = ({currentModal, item, arrayItem}) => {\n       let itemedits = {};\n       if (currentModal === true) {\n           return (\n               <div>\n                 <div className=\"modal-page\">\n                  <div className=\"container\">\n                   <div className=\"modal-padding\">\n                    <div className=\"modal-box\">\n                     <span className=\"closebtndark\" onClick={() => {\n                         setItemModal({\n                             itemModal: false\n                         })\n                     }}>&times;</span>\n                     <h4>Current Table Item</h4>\n                     <div className=\"input-container\">\n                      <table className=\"table-data\">\n                        <tbody>\n                          <tr className=\"table-data-headers\">\n                            {\n                                arrayItem.map((indice) => (\n                                    <th className=\"table-header\" key={arrayItem.indexOf(indice)}>{indice}</th>\n                                ))\n                            }\n                          </tr>\n                          <tr className=\"table-row\">\n                            {\n                                arrayItem.map((index) => (\n                                    <td className=\"table-item\" key={arrayItem.indexOf(index)}>{NullifiedData(item.response[index])}</td>\n                                ))\n                            }\n                          </tr>\n                        </tbody>\n                      </table>\n                     </div>\n                     <div className=\"input-container\">\n                      <div className=\"row\">\n                       {\n                           arrayItem.map((item) => (\n                             <div className=\"comp-container\" key={arrayItem.indexOf(item)}>\n                                <input type=\"text\" className=\"input-bar\" placeholder={item} onChange={(e) => {\n                                    itemedits[item] = e.target.value\n                                }} />\n                             </div>\n                           ))\n                       }\n                      </div>\n                     </div>\n                     <div className=\"float-right\">\n                       <button className=\"button-red\" onClick={() => {\n                           axios.post('https://jpi-backend.herokuapp.com/analytics/table/deletetableitem/' + projectapi + '/' + tableapi, item,{\n                               headers: {\n                                'Accept': 'application/json',\n                                'Content-Type': 'application/json'\n                               },\n                          }).then((body) => {\n                             console.log(body);\n                             setDataTable({\n                                 data: body.data\n                             })\n                          }).catch((error) => {\n                               console.log(error)\n                           })\n                       }}>DELETE TABLE ITEM</button>\n                     </div>\n                     <button className=\"button-purple\" onClick={() => {                             \n                         axios.post('https://jpi-backend.herokuapp.com/analytics/table/editTableData/' + projectapi + '/' + tableapi + '/' + item.reponseid, itemedits,{\n                             headers: {\n                                'Accept': 'application/json',\n                                'Content-Type': 'application/json'\n                             },\n                         }).then((body) => {\n                             let checker = null;\n                             for (const index of datatable.data) {\n                                 if (index.reponseid === body.data.reponseid) {\n                                    checker = datatable.data.indexOf(index);\n                                 }\n                             }\n                             if (~checker) {\n                                 datatable.data[checker] = body.data\n                             }\n\n                             setDataTable({\n                                 data: datatable.data\n                             })\n                             setItemModal({\n                                 itemModal: false\n                             })\n                         }).catch((error) => {\n                             console.log(error);\n                         })\n                     }}>EDIT TABLE ITEM</button>\n                    </div>\n                   </div>\n                  </div>\n                 </div>  \n               </div>\n           )\n       } else {\n           return null;\n       }\n   }\n\n   const Data = () => {\n    const [datamodal, setDataModal] = useState({\n        datamodal: false\n    })\n    const DataModal = ({datamodal}) => {\n        const items = {};\n        if (datamodal === true) {\n            return (\n               <div>\n                 <div className=\"modal-page\">\n                  <div className=\"container\">\n                    <div className=\"modal-padding\">\n                     <div className=\"modal-box\">\n                      <span className=\"closebtndark\" onClick={() => {\n                          setDataModal({\n                              datamodal: false\n                          })\n                      }}>&times;</span>\n                      <h3>ADD DATA</h3>\n                      {\n                          array.map((item) => (\n                              <div key={array.indexOf(item)}>\n                                <div className=\"input-container\">\n                                 <input type=\"text\" className=\"input-bar\" placeholder={item} onChange={(e) => {\n                                     items[item] = e.target.value\n                                 }} /> \n                                </div>\n                              </div>\n                          ))\n                      }\n                      <div className=\"button-padding\">\n                       <button className=\"button-purple\" onClick={() => {\n                           axios.post('https://jpi-backend.herokuapp.com/analytics/table/addentry/' + projectapi + '/' + tableapi , items,{\n                               headers: {\n                                'Accept': 'application/json',\n                                'Content-Type': 'application/json'\n                               },\n                           }).then((body) => {\n                              console.log(body)\n                              datatable.data.push(body.data);\n                              setDataTable({\n                                  data: datatable.data\n                              })\n                           }).catch((error) => {\n                               console.log(error);\n                           })\n\n                       }}>ADD DATA</button>\n                      </div>\n                     </div>\n                    </div>\n                  </div>\n                 </div>\n               </div>\n            )\n        } else {\n            return null;\n        }\n    }\n\n    const DataFiles = () => {\n        if (data.length === 0) {\n            return (\n                <div>\n                 <div className=\"empty-table-container\">\n                  <h2>You have no data just yet</h2>\n                 </div>\n                </div>\n            )\n        } else {\n            return (\n                <div>\n                    <div className=\"table-container\">\n                    <table className=\"table-data\">\n                        <tbody>\n                            <tr className=\"table-data-headers\">\n                                {\n                                array.map((item) => (\n                                    <th className=\"table-header\" key={array.indexOf(item)}>{item}</th>\n                                ))\n                                }\n                            </tr>\n                            {\n                                data.map((item) => (\n                                    <tr className=\"table-row\" key={data.indexOf(item)} onClick={() => {\n                                        setCurrentItem({\n                                            currentItem: item\n                                        })\n                                        setItemModal({\n                                            itemModal: true\n                                        })\n                                    }}>\n                                    {\n                                        array.map((index) => (\n                                            <td className=\"table-item\" key={array.indexOf(index)}>{NullifiedData(NullifiedData(item.response)[index])}</td>\n                                        ))\n                                    }\n                                    </tr>\n                                ))\n                            }\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            )\n        }\n    }\n\n    const SetCredentials = ({setCreds}) => {\n        const [addedLabels, setLabels] = useState({\n            addedLabels: []\n        })\n        if (setCreds === true) {\n            return (\n                <div>\n                 <div className=\"modal-page\">\n                  <div className=\"container\">\n                    <div className=\"modal-padding\">\n                     <div className=\"modal-box\">\n                     <span className=\"closebtndark\" onClick={() => {\n                         setCredentialModal({\n                             credentialModal: false\n                         })\n                     }}>&times;</span>\n                     <h3>SET DATA CREDENTIALS</h3>\n                     <h5>Embedded Labels</h5>\n                     <h6>JPI sets labels for your such as.</h6>\n                     <div className=\"input-container\">\n                      <input type=\"text\" className=\"input-bar\" onKeyDown={(e) => {\n                          if (e.keyCode === 13) {\n                            addedLabels.addedLabels.push(e.target.value)\n                            setLabels({\n                                addedLabels: addedLabels.addedLabels\n                            })\n                            e.target.value = \"\"\n                          }\n                      }} />\n                     </div>\n                      {\n                          addedLabels.addedLabels.map((item) => (\n                          <li key={addedLabels.addedLabels.indexOf(item)}>{item}</li>\n                          ))\n                      }\n                      <div className=\"button-padding\">\n                        <button className=\"button-purple\" onClick={() => {\n                            const data = {labels: addedLabels.addedLabels}\n                            axios.post('https://jpi-backend.herokuapp.com/analytics/table/setcredlabels/' + projectapi + '/' + tableapi, data,{\n                                headers:{ \n                                    'Accept': 'application/json',\n                                    'Content-Type': 'application/json' \n                                },\n                            }).then((body) => {\n                                array = body.data;\n                                setCredentialModal({\n                                    credentialModal: false\n                                })\n                            }).catch((error) => {\n                                console.log(error);\n                            })\n                        }}>SET CREDENTIALS</button>\n                      </div>\n                     </div>\n                    </div>\n                  </div>\n                 </div>\n                </div>\n            )\n        } else {\n            return null;\n        }\n    }\n\n    const StatusBtn = () => {\n        if (array.length === 0) {\n            return (\n                <div>\n                 <button className=\"button-white\" onClick={() => {\n                     setCredentialModal({\n                         credentialModal: true\n                     })\n                 }}>SET CREDENTIALS</button>\n                </div>\n            )\n        } else {\n            return (\n                <div>\n                <button className=\"button-purple\" onClick={() => {\n                    setDataModal({\n                        datamodal: true\n                    })\n                }}>ADD DATA</button>\n                </div>\n            )\n        }\n    }\n\n    return (\n         <div>\n          <div className=\"float-right\">\n           <StatusBtn/>\n          </div>\n          <div className=\"text-padding\">\n            <h2>Table Data</h2>\n          </div>\n          <SetCredentials setCreds={credentialModal.credentialModal}/>\n          <DataFiles/>\n          <DataModal datamodal={datamodal.datamodal} />\n         </div>\n        )\n    }\n\n    if (tabledata === true) {\n        return (\n            <div>\n             <div className=\"data-page\">\n              <Data />\n              <CurrentItemModal currentModal={itemModal.itemModal} item={currentItem.currentItem} arrayItem={array} />\n             </div>\n            </div>\n        )\n    } else {\n        return null;\n    }\n}\n\nexport default TableData;","import React from 'react';\n\nconst TableDetails = ({tabledetails, details}) => {\n    const StringLabels = () => {\n        let result = '';\n        for (const item of details.tablelabels) {\n            if (details.tablelabels.indexOf(item) === details.tablelabels.length - 1) {\n                result += item\n            }\n             \n            result += item + \", \"\n        }\n        return result\n    }\n    if (tabledetails === true) {\n        return (\n            <div>\n             <div className=\"data-page\">\n              <div className=\"text-padding\">\n                <h2>Table Details</h2>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-md-4\">\n                    <div className=\"details-container\">\n                        <h4><b>Data Labels</b></h4>\n                        <StringLabels/>\n                    </div>\n                </div>\n                <div className=\"col-md-4\">\n                    <div className=\"details-container\">\n                        <h4><b>Data Size</b></h4>\n                        <h6>{details.tabledata.length}</h6>\n                    </div>\n                </div>\n              </div>\n             </div>\n            </div>\n        )\n    } else {    \n        return null;\n    }\n}\n\nexport default TableDetails;","import React from 'react';\n\nconst TableFunctionality = ({tablefunctionality}) => {\n    if (tablefunctionality === true) {\n        return (\n            <div>\n             <div className=\"data-page\">\n              <div className=\"text-padding\">\n               <h2>Table Functionality</h2>\n              </div>\n             </div>\n            </div>\n        )\n    } else {\n        return null;\n    }\n}\n\nexport default TableFunctionality;","import React from 'react';\n\nconst TableUsuage = ({tableusuage}) => {\n    if (tableusuage === true) {\n        return (\n            <div>\n             <div className=\"data-page\">\n              <div className=\"text-padding\">\n               <h2>Table Usuage</h2>\n              </div>\n             </div>\n            </div>\n        )\n    } else {\n        return null\n    }\n}\n\nexport default TableUsuage;","import React from 'react';\n\nconst LoadingWholePageLight = ({loadingprocess, title }) => {\n    if (loadingprocess === true) {\n        return (\n            <div>\n              <div className=\"modal-page-light-purple\">\n                <div className=\"container\">\n                  <div className=\"major-padding-page\">\n                    <div className=\"row\">\n                      <div className=\"col-md-12\">\n                      <div className=\"d-flex justify-content-center\">\n                      <div className=\"loader\" title=\"2\">\n                      <svg version=\"1.1\" id=\"loader-1\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"10px\" y=\"10px\"\n                          width=\"40px\" height=\"40px\" viewBox=\"0 0 50 50\" xmlSpace=\"preserve\">\n                      <path fill=\"#000\" d=\"M43.935,25.145c0-10.318-8.364-18.683-18.683-18.683c-10.318,0-18.683,8.365-18.683,18.683h4.068c0-8.071,6.543-14.615,14.615-14.615c8.072,0,14.615,6.543,14.615,14.615H43.935z\">\n                          <animateTransform attributeType=\"xml\"\n                          attributeName=\"transform\"\n                          type=\"rotate\"\n                          from=\"0 25 25\"\n                          to=\"360 25 25\"\n                          dur=\"0.6s\"\n                          repeatCount=\"indefinite\"\n                          fontSize=\"50px\"/>\n                          </path>\n                      </svg>\n                      </div>\n                      </div>\n                      </div>\n                    </div>\n                    <div className=\"row\">\n                     <div className=\"col-md-12\">\n                     <div className=\"text-padding-major\">\n                      <h3 className=\"text-white text-center\">{title}</h3>\n                     </div>\n                     </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n        )\n    } else {\n        return null;\n    }\n}\n\nexport default LoadingWholePageLight;","import React from 'react';\n\nconst LoadingData = ({loading}) => {\n    if (loading === true) {\n        return (\n            <div>\n             <div className=\"loading-container-component\">\n             <div className=\"row\">\n                <div className=\"col-md-12\">\n                  <div className=\"d-flex justify-content-center\">\n                <div className=\"loader\" title=\"2\">\n                <svg version=\"1.1\" id=\"loader-1\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"10px\" y=\"10px\"\n                          width=\"40px\" height=\"40px\" viewBox=\"0 0 50 50\" xmlSpace=\"preserve\">\n                <path fill=\"#000\" d=\"M43.935,25.145c0-10.318-8.364-18.683-18.683-18.683c-10.318,0-18.683,8.365-18.683,18.683h4.068c0-8.071,6.543-14.615,14.615-14.615c8.072,0,14.615,6.543,14.615,14.615H43.935z\">\n                <animateTransform attributeType=\"xml\"\n                          attributeName=\"transform\"\n                          type=\"rotate\"\n                          from=\"0 25 25\"\n                          to=\"360 25 25\"\n                          dur=\"0.6s\"\n                          repeatCount=\"indefinite\"\n                          fontSize=\"50px\"/>\n                          </path>\n                </svg>\n                </div>\n                </div>\n                </div>\n                </div>\n                <div className=\"row\">\n                <div className=\"col-md-12\">\n                <div className=\"text-padding-major\">\n                 <h3 className=\"text-center\">RELOAD</h3>\n                </div>\n                </div>\n                </div>\n             </div>\n            </div>\n        )\n    } else {\n        return null;\n    }\n}\n\nexport default LoadingData;","import React,{useState , useEffect, useRef} from 'react';\nimport AnalyticNav from './Analyticcomps/Analyticnav';\nimport TableData from './Tablepage/TableData';\nimport TableDetails from './Tablepage/TableDetails';\nimport TableFunctionality from './Tablepage/TableFunctionality';\nimport TableUsuage from './Tablepage/TableUsuage';\nimport LoadingWholePageLight from '../../MiscComps/Wholeloadinglightblue';\nimport LoadingData from './Analyticcomps/LoadingData';\nimport axios from 'axios';\nconst TablePage = (props) => {\n    const [tableresponse, setTableResponse] = useState({\n        tableresponse: {}\n    })\n    const [datatable, setDataTable] = useState({\n        datatable: []\n    })\n    const [tabledata, setTableData] = useState({\n        tabledata: true\n    })\n    const [functionality, setFunctionality] = useState({\n        functionality: false\n    })\n    const [usuage, setUsage] = useState({\n        usuage: false\n    })\n    const [tabledetails, setTableDetails] = useState({\n        tabledetails: false\n    })\n    const [loading, setLoading] = useState({\n        loading: true\n    })\n    const [componentLoading, setComponentLoading] = useState({\n        componentLoading: false\n    })\n    const [renderPage, setRenderPage] = useState({\n        renderPage: false\n    })\n    const mounted = useRef(null);\n    useEffect(() => {\n     mounted.current = true;\n      if (mounted.current) {\n            setTimeout(() => {\n            axios.get(`https://jpi-backend.herokuapp.com/data/gettablepagedata/${props.match.params.projectapi}/${props.match.params.tableapi}`)\n            .then((body) => {\n                setTableResponse({\n                    tableresponse: body.data\n                })\n                setDataTable({\n                    data: body.data.tabledata\n                })\n                setLoading({\n                    loading: false\n                })\n                setRenderPage({\n                    renderPage: true\n                })\n            }).catch((error) => {\n                console.error(error)\n            })\n            }, 1000);\n     }\n\n     return () => {mounted.current = false}\n     \n    }, [renderPage.renderPage ,props.match.params.projectapi, props.match.params.tableapi])\n\n    const RenderedPage = ({render}) => {\n        if (render === true) {\n            return (\n                <div>\n                <TableData tabledata={tabledata.tabledata} data={datatable.data} array={tableresponse.tableresponse.tablelabels} projectapi={props.match.params.projectapi} tableapi={props.match.params.tableapi} />\n                <TableDetails tabledetails={tabledetails.tabledetails} details={tableresponse.tableresponse} />\n                <TableFunctionality tablefunctionality={functionality.functionality} />\n                <TableUsuage tableusuage={usuage.usuage} />\n                </div>\n            )\n        } else {\n            return null;\n        }\n    }\n\n    return (\n        <div>\n         <AnalyticNav navtitle={tableresponse.tableresponse.projectname} projectapi={props.match.params.projectapi} />\n         <div className=\"data-whole-page\">\n         <div className=\"data-nav\">\n         <div className=\"data-title\">\n          <div className=\"text-padding\">\n            <h3>{tableresponse.tableresponse.tablename}</h3>\n            <div className=\"nav-comp-container\">\n            <button className=\"button-white\" onClick={() => {\n                  setComponentLoading({\n                      componentLoading: true\n                  })\n                  setRenderPage({\n                      renderPage: false\n                  })\n                  setTimeout(() => {\n                    setComponentLoading({\n                        componentLoading: false\n                    })\n                    setRenderPage({\n                        renderPage: true\n                    })\n                  }, 1000);\n              }}>REFRESH</button>\n            </div>\n            <div className=\"nav-comp-container\">\n             <h6 onClick={() => {\n                setTableData({\n                    tabledata: true\n                })\n                setFunctionality({\n                    functionality: false\n                })\n                setTableDetails({\n                    tabledetails: false\n                })\n                setUsage({\n                    usuage: false\n                })\n             }}>DATA</h6>\n            </div>\n            <div className=\"nav-comp-container\">\n             <h6 onClick={() => {\n                  setTableData({\n                    tabledata: false\n                })\n                setFunctionality({\n                    functionality: false\n                })\n                setTableDetails({\n                    tabledetails: true\n                })\n                setUsage({\n                    usuage: false\n                })\n             }}>DETAILS</h6>\n            </div>\n            <div className=\"nav-comp-container\">\n             <h6 onClick={() => {\n                 setTableData({\n                    tabledata: false\n                })\n                setFunctionality({\n                    functionality: false\n                })\n                setTableDetails({\n                    tabledetails: false\n                })\n                setUsage({\n                    usuage: true\n                })\n             }}>USUAGE</h6>\n            </div>\n            <div className=\"nav-comp-container\">\n             <h6 onClick={() => {\n                 setTableData({\n                    tabledata: false\n                })\n                setFunctionality({\n                    functionality: true\n                })\n                setTableDetails({\n                    tabledetails: false\n                })\n                setUsage({\n                    usuage: false\n                })\n             }}>FUNCTIONALITY</h6>\n            </div>\n          </div>\n          </div>\n         </div>\n         <div className=\"data-page\">\n            <LoadingData loading={componentLoading.componentLoading} />\n            <LoadingWholePageLight loadingprocess={loading.loading} title={\"FETCHING TABLE DATA\"} />\n            <RenderedPage render={renderPage.renderPage} />\n         </div>\n         </div>\n        </div>\n    )\n}\n\nexport default TablePage","import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport {HashRouter , Route} from 'react-router-dom';\nimport Home from './Pages/Home';\nimport Login from './Pages/Login';\nimport './App.css'\nimport Register from './Pages/Register';\nimport Dash from './AuthPages/Dash';\nimport SetComponent from './Admin/Setcomponent';\nimport ProjectDetails from './AuthPages/ProjectPages/Projecthome';\nimport PrivateRoute from './Security/PrivateRoute';\nimport { JPIAuth } from './Authentication/Auth';\nimport Tablepage from './AuthPages/ProjectAnalytics/Tablepage'\n\nconst App = () => {\n \n const [authenticated, setAuthenticated] = useState({\n   authenticated: false\n })\n\n useEffect(() => {\n  JPIAuth.registerListener((user) => {\n    if (user) {\n      setAuthenticated({\n        authenticated: true\n      })\n    } else {\n      setAuthenticated({\n        authenticated: false\n      })\n    }\n  })\n }, [])\n\n\n \n  return (\n    <div>\n     <HashRouter basename=\"/\">\n      <Route path=\"/Login\" component={Login} exact />\n      <Route path=\"/Register\" component={Register} exact />\n      <Route path=\"/Admin\" component={SetComponent} exact />\n      <Route path=\"/\" component={Home} exact/>\n      <PrivateRoute path=\"/Dash\" comp={Dash} isAuthenticated={authenticated.authenticated} />\n      <PrivateRoute path=\"/project/:projectapi\" comp={ProjectDetails} isAuthenticated={authenticated.authenticated} />\n      <PrivateRoute path=\"/project/projectanalytics/:projectapi/:tableapi\" comp={Tablepage} isAuthenticated={authenticated.authenticated} />\n     </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}